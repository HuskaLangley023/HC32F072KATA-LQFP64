Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    system_hc32f072.o(.text.SystemCoreClockUpdate) refers to sysctrl.o(.text.Sysctrl_GetHClkFreq) for Sysctrl_GetHClkFreq
    system_hc32f072.o(.text.SystemCoreClockUpdate) refers to system_hc32f072.o(.data.SystemCoreClock) for SystemCoreClock
    system_hc32f072.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_hc32f072.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_hc32f072.o(.text.SystemInit) refers to system_hc32f072.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    system_hc32f072.o(.ARM.exidx.text.SystemInit) refers to system_hc32f072.o(.text.SystemInit) for [Anonymous Symbol]
    system_hc32f072.o(.text.$Sub$$main) refers to system_hc32f072.o(.text.SystemInit) for SystemInit
    system_hc32f072.o(.text.$Sub$$main) refers to main.o(.text.main) for $Super$$main
    system_hc32f072.o(.ARM.exidx.text.$Sub$$main) refers to system_hc32f072.o(.text.$Sub$$main) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.EnableNvic) refers to interrupts_hc32f072.o(.text.EnableNvic) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.HardFault_Handler) refers to interrupts_hc32f072.o(.text.HardFault_Handler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.SysTick_Handler) refers to interrupts_hc32f072.o(.text.SysTick_Handler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.PORTA_IRQHandler) refers to interrupts_hc32f072.o(.text.PORTA_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.PORTB_IRQHandler) refers to interrupts_hc32f072.o(.text.PORTB_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.PORTC_E_IRQHandler) refers to interrupts_hc32f072.o(.text.PORTC_E_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.PORTD_F_IRQHandler) refers to interrupts_hc32f072.o(.text.PORTD_F_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.DMAC_IRQHandler) refers to interrupts_hc32f072.o(.text.DMAC_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM3_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM3_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.text.UART0_2_IRQHandler) refers (Weak) to main.o(.text.Uart0_IRQHandler) for Uart0_IRQHandler
    interrupts_hc32f072.o(.ARM.exidx.text.UART0_2_IRQHandler) refers to interrupts_hc32f072.o(.text.UART0_2_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.UART1_3_IRQHandler) refers to interrupts_hc32f072.o(.text.UART1_3_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.LPUART0_IRQHandler) refers to interrupts_hc32f072.o(.text.LPUART0_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.LPUART1_IRQHandler) refers to interrupts_hc32f072.o(.text.LPUART1_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.SPI0_I2S0_IRQHandler) refers to interrupts_hc32f072.o(.text.SPI0_I2S0_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.SPI1_I2S1_IRQHandler) refers to interrupts_hc32f072.o(.text.SPI1_I2S1_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.I2C0_IRQHandler) refers to interrupts_hc32f072.o(.text.I2C0_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.I2C1_IRQHandler) refers to interrupts_hc32f072.o(.text.I2C1_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM0_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM0_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM1_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM1_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM2_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM4_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM4_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM5_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM5_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.TIM6_IRQHandler) refers to interrupts_hc32f072.o(.text.TIM6_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.PCA_IRQHandler) refers to interrupts_hc32f072.o(.text.PCA_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.WDT_IRQHandler) refers to interrupts_hc32f072.o(.text.WDT_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.ADC_DAC_IRQHandler) refers to interrupts_hc32f072.o(.text.ADC_DAC_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.VC0_1_2_LVD_IRQHandler) refers to interrupts_hc32f072.o(.text.VC0_1_2_LVD_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.USBFS_IRQHandler) refers to interrupts_hc32f072.o(.text.USBFS_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.text.CAN_IRQHandler) refers (Weak) to main.o(.text.Can_IRQHandler) for Can_IRQHandler
    interrupts_hc32f072.o(.ARM.exidx.text.CAN_IRQHandler) refers to interrupts_hc32f072.o(.text.CAN_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.FLASH_RAM_IRQHandler) refers to interrupts_hc32f072.o(.text.FLASH_RAM_IRQHandler) for [Anonymous Symbol]
    interrupts_hc32f072.o(.ARM.exidx.text.CLKTRIM_CTS_IRQHandler) refers to interrupts_hc32f072.o(.text.CLKTRIM_CTS_IRQHandler) for [Anonymous Symbol]
    startup_hc32f072.o(RESET) refers to startup_hc32f072.o(STACK) for __initial_sp
    startup_hc32f072.o(RESET) refers to startup_hc32f072.o(.text) for Reset_Handler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.HardFault_Handler) for HardFault_Handler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.SysTick_Handler) for SysTick_Handler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.PORTA_IRQHandler) for PORTA_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.PORTB_IRQHandler) for PORTB_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.PORTC_E_IRQHandler) for PORTC_E_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.PORTD_F_IRQHandler) for PORTD_F_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.DMAC_IRQHandler) for DMAC_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.UART0_2_IRQHandler) for UART0_2_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.UART1_3_IRQHandler) for UART1_3_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.LPUART0_IRQHandler) for LPUART0_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.LPUART1_IRQHandler) for LPUART1_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.SPI0_I2S0_IRQHandler) for SPI0_I2S0_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.SPI1_I2S1_IRQHandler) for SPI1_I2S1_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM0_IRQHandler) for TIM0_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM1_IRQHandler) for TIM1_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM4_IRQHandler) for TIM4_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM5_IRQHandler) for TIM5_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.TIM6_IRQHandler) for TIM6_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.PCA_IRQHandler) for PCA_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.WDT_IRQHandler) for WDT_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.ADC_DAC_IRQHandler) for ADC_DAC_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.VC0_1_2_LVD_IRQHandler) for VC0_1_2_LVD_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.USBFS_IRQHandler) for USBFS_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.CAN_IRQHandler) for CAN_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.FLASH_RAM_IRQHandler) for FLASH_RAM_IRQHandler
    startup_hc32f072.o(RESET) refers to interrupts_hc32f072.o(.text.CLKTRIM_CTS_IRQHandler) for CLKTRIM_CTS_IRQHandler
    startup_hc32f072.o(.text) refers to system_hc32f072.o(.text.SystemInit) for SystemInit
    startup_hc32f072.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    ddl.o(.ARM.exidx.text.Log2) refers to ddl.o(.text.Log2) for [Anonymous Symbol]
    ddl.o(.ARM.exidx.text.ddl_memclr) refers to ddl.o(.text.ddl_memclr) for [Anonymous Symbol]
    ddl.o(.text.delay1ms) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ddl.o(.text.delay1ms) refers to system_hc32f072.o(.data.SystemCoreClock) for SystemCoreClock
    ddl.o(.ARM.exidx.text.delay1ms) refers to ddl.o(.text.delay1ms) for [Anonymous Symbol]
    ddl.o(.text.delay100us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ddl.o(.text.delay100us) refers to system_hc32f072.o(.data.SystemCoreClock) for SystemCoreClock
    ddl.o(.ARM.exidx.text.delay100us) refers to ddl.o(.text.delay100us) for [Anonymous Symbol]
    ddl.o(.text.delay10us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ddl.o(.text.delay10us) refers to system_hc32f072.o(.data.SystemCoreClock) for SystemCoreClock
    ddl.o(.ARM.exidx.text.delay10us) refers to ddl.o(.text.delay10us) for [Anonymous Symbol]
    ddl.o(.ARM.exidx.text.SetBit) refers to ddl.o(.text.SetBit) for [Anonymous Symbol]
    ddl.o(.ARM.exidx.text.GetBit) refers to ddl.o(.text.GetBit) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_ClkSourceEnable) refers to ddl.o(.text.delay10us) for delay10us
    sysctrl.o(.ARM.exidx.text.Sysctrl_ClkSourceEnable) refers to sysctrl.o(.text.Sysctrl_ClkSourceEnable) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_XTHDriverCfg) refers to sysctrl.o(.text.Sysctrl_XTHDriverCfg) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_XTLDriverCfg) refers to sysctrl.o(.text.Sysctrl_XTLDriverCfg) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetXTHStableTime) refers to sysctrl.o(.text.Sysctrl_SetXTHStableTime) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetRCLStableTime) refers to sysctrl.o(.text.Sysctrl_SetRCLStableTime) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetXTLStableTime) refers to sysctrl.o(.text.Sysctrl_SetXTLStableTime) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetPLLStableTime) refers to sysctrl.o(.text.Sysctrl_SetPLLStableTime) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_SysClkSwitch) refers to system_hc32f072.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    sysctrl.o(.ARM.exidx.text.Sysctrl_SysClkSwitch) refers to sysctrl.o(.text.Sysctrl_SysClkSwitch) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_GetHClkFreq) refers to sysctrl.o(.text.Sysctrl_GetHClkFreq) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_GetPClkFreq) refers to sysctrl.o(.text.Sysctrl_GetHClkFreq) for Sysctrl_GetHClkFreq
    sysctrl.o(.ARM.exidx.text.Sysctrl_GetPClkFreq) refers to sysctrl.o(.text.Sysctrl_GetPClkFreq) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_ClkInit) refers to sysctrl.o(.text.Sysctrl_ClkSourceEnable) for Sysctrl_ClkSourceEnable
    sysctrl.o(.text.Sysctrl_ClkInit) refers to sysctrl.o(.text.Sysctrl_SysClkSwitch) for Sysctrl_SysClkSwitch
    sysctrl.o(.text.Sysctrl_ClkInit) refers to sysctrl.o(.text.Sysctrl_SetHCLKDiv) for Sysctrl_SetHCLKDiv
    sysctrl.o(.text.Sysctrl_ClkInit) refers to sysctrl.o(.text.Sysctrl_SetPCLKDiv) for Sysctrl_SetPCLKDiv
    sysctrl.o(.ARM.exidx.text.Sysctrl_ClkInit) refers to sysctrl.o(.text.Sysctrl_ClkInit) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetHCLKDiv) refers to sysctrl.o(.text.Sysctrl_SetHCLKDiv) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetPCLKDiv) refers to sysctrl.o(.text.Sysctrl_SetPCLKDiv) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_ClkDeInit) refers to sysctrl.o(.text.Sysctrl_SysClkSwitch) for Sysctrl_SysClkSwitch
    sysctrl.o(.text.Sysctrl_ClkDeInit) refers to sysctrl.o(.text.Sysctrl_ClkSourceEnable) for Sysctrl_ClkSourceEnable
    sysctrl.o(.ARM.exidx.text.Sysctrl_ClkDeInit) refers to sysctrl.o(.text.Sysctrl_ClkDeInit) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetRCHTrim) refers to sysctrl.o(.text.Sysctrl_SetRCHTrim) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetXTHFreq) refers to sysctrl.o(.text.Sysctrl_SetXTHFreq) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetPLLFreq) refers to sysctrl.o(.text.Sysctrl_SetPLLFreq) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetRCLTrim) refers to sysctrl.o(.text.Sysctrl_SetRCLTrim) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_SetPeripheralGate) refers to ddl.o(.text.SetBit) for SetBit
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetPeripheralGate) refers to sysctrl.o(.text.Sysctrl_SetPeripheralGate) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_GetPeripheralGate) refers to ddl.o(.text.GetBit) for GetBit
    sysctrl.o(.ARM.exidx.text.Sysctrl_GetPeripheralGate) refers to sysctrl.o(.text.Sysctrl_GetPeripheralGate) for [Anonymous Symbol]
    sysctrl.o(.text.Sysctrl_SetFunc) refers to ddl.o(.text.SetBit) for SetBit
    sysctrl.o(.ARM.exidx.text.Sysctrl_SetFunc) refers to sysctrl.o(.text.Sysctrl_SetFunc) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_UsbClkSel) refers to sysctrl.o(.text.Sysctrl_UsbClkSel) for [Anonymous Symbol]
    sysctrl.o(.ARM.exidx.text.Sysctrl_TimerPllClkSel) refers to sysctrl.o(.text.Sysctrl_TimerPllClkSel) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_Init) refers to can.o(.text.CAN_Init) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_DeInit) refers to can.o(.text.CAN_DeInit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_ModeConfig) refers to can.o(.text.CAN_ModeConfig) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_FilterConfig) refers to can.o(.text.CAN_FilterConfig) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_SetFrame) refers to can.o(.text.CAN_SetFrame) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_TransmitCmd) refers to can.o(.text.CAN_TransmitCmd) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_TxBufStatusGet) refers to can.o(.text.CAN_TxBufStatusGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_Receive) refers to can.o(.text.CAN_Receive) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_RxBufStatusGet) refers to can.o(.text.CAN_RxBufStatusGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_ErrorStatusGet) refers to can.o(.text.CAN_ErrorStatusGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_StatusGet) refers to can.o(.text.CAN_StatusGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_IrqCmd) refers to can.o(.text.CAN_IrqCmd) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_IrqFlgGet) refers to can.o(.text.CAN_IrqFlgGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_IrqFlgClr) refers to can.o(.text.CAN_IrqFlgClr) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_RxErrorCntGet) refers to can.o(.text.CAN_RxErrorCntGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_TxErrorCntGet) refers to can.o(.text.CAN_TxErrorCntGet) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_ArbitrationLostCap) refers to can.o(.text.CAN_ArbitrationLostCap) for [Anonymous Symbol]
    gpio.o(.text.Gpio_Init) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_Init) refers to gpio.o(.text.Gpio_Init) for [Anonymous Symbol]
    gpio.o(.text.Gpio_GetInputIO) refers to ddl.o(.text.GetBit) for GetBit
    gpio.o(.ARM.exidx.text.Gpio_GetInputIO) refers to gpio.o(.text.Gpio_GetInputIO) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_GetInputData) refers to gpio.o(.text.Gpio_GetInputData) for [Anonymous Symbol]
    gpio.o(.text.Gpio_WriteOutputIO) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_WriteOutputIO) refers to gpio.o(.text.Gpio_WriteOutputIO) for [Anonymous Symbol]
    gpio.o(.text.Gpio_ReadOutputIO) refers to ddl.o(.text.GetBit) for GetBit
    gpio.o(.ARM.exidx.text.Gpio_ReadOutputIO) refers to gpio.o(.text.Gpio_ReadOutputIO) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SetPort) refers to gpio.o(.text.Gpio_SetPort) for [Anonymous Symbol]
    gpio.o(.text.Gpio_SetIO) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_SetIO) refers to gpio.o(.text.Gpio_SetIO) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_ClrPort) refers to gpio.o(.text.Gpio_ClrPort) for [Anonymous Symbol]
    gpio.o(.text.Gpio_ClrIO) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_ClrIO) refers to gpio.o(.text.Gpio_ClrIO) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SetClrPort) refers to gpio.o(.text.Gpio_SetClrPort) for [Anonymous Symbol]
    gpio.o(.text.Gpio_SetAnalogMode) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_SetAnalogMode) refers to gpio.o(.text.Gpio_SetAnalogMode) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SetAfMode) refers to gpio.o(.text.Gpio_SetAfMode) for [Anonymous Symbol]
    gpio.o(.text.Gpio_EnableIrq) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_EnableIrq) refers to gpio.o(.text.Gpio_EnableIrq) for [Anonymous Symbol]
    gpio.o(.text.Gpio_DisableIrq) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_DisableIrq) refers to gpio.o(.text.Gpio_DisableIrq) for [Anonymous Symbol]
    gpio.o(.text.Gpio_GetIrqStatus) refers to ddl.o(.text.GetBit) for GetBit
    gpio.o(.ARM.exidx.text.Gpio_GetIrqStatus) refers to gpio.o(.text.Gpio_GetIrqStatus) for [Anonymous Symbol]
    gpio.o(.text.Gpio_ClearIrq) refers to ddl.o(.text.SetBit) for SetBit
    gpio.o(.ARM.exidx.text.Gpio_ClearIrq) refers to gpio.o(.text.Gpio_ClearIrq) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfIrqModeCfg) refers to gpio.o(.text.Gpio_SfIrqModeCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfIrPolCfg) refers to gpio.o(.text.Gpio_SfIrPolCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfHClkOutputCfg) refers to gpio.o(.text.Gpio_SfHClkOutputCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfPClkOutputCfg) refers to gpio.o(.text.Gpio_SfPClkOutputCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfExtClkCfg) refers to gpio.o(.text.Gpio_SfExtClkCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfSsnCfg) refers to gpio.o(.text.Gpio_SfSsnCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfTimGCfg) refers to gpio.o(.text.Gpio_SfTimGCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfTimECfg) refers to gpio.o(.text.Gpio_SfTimECfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfTimCCfg) refers to gpio.o(.text.Gpio_SfTimCCfg) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.Gpio_SfPcaCfg) refers to gpio.o(.text.Gpio_SfPcaCfg) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_GetStatus) refers to spi.o(.text.Spi_GetStatus) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_ClearStatus) refers to spi.o(.text.Spi_ClearStatus) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_IrqEnable) refers to spi.o(.text.Spi_IrqEnable) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_IrqDisable) refers to spi.o(.text.Spi_IrqDisable) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_FuncEnable) refers to spi.o(.text.Spi_FuncEnable) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_FuncDisable) refers to spi.o(.text.Spi_FuncDisable) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_Init) refers to spi.o(.text.Spi_Init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_SetCS) refers to spi.o(.text.Spi_SetCS) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_SendData) refers to spi.o(.text.Spi_SendData) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_RWByte) refers to spi.o(.text.Spi_RWByte) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_Slave_DummyWriteData) refers to spi.o(.text.Spi_Slave_DummyWriteData) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_SendBuf) refers to spi.o(.text.Spi_SendBuf) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_ReceiveData) refers to spi.o(.text.Spi_ReceiveData) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.Spi_ReceiveBuf) refers to spi.o(.text.Spi_ReceiveBuf) for [Anonymous Symbol]
    reset.o(.ARM.exidx.text.Reset_GetFlag) refers to reset.o(.text.Reset_GetFlag) for [Anonymous Symbol]
    reset.o(.ARM.exidx.text.Reset_ClearFlag) refers to reset.o(.text.Reset_ClearFlag) for [Anonymous Symbol]
    reset.o(.ARM.exidx.text.Reset_ClearFlagAll) refers to reset.o(.text.Reset_ClearFlagAll) for [Anonymous Symbol]
    reset.o(.ARM.exidx.text.Reset_RstPeripheralAll) refers to reset.o(.text.Reset_RstPeripheralAll) for [Anonymous Symbol]
    reset.o(.ARM.exidx.text.Reset_RstPeripheral0) refers to reset.o(.text.Reset_RstPeripheral0) for [Anonymous Symbol]
    reset.o(.ARM.exidx.text.Reset_RstPeripheral1) refers to reset.o(.text.Reset_RstPeripheral1) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_cris_enter) refers to wizchip_conf.o(.text.wizchip_cris_enter) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_cris_exit) refers to wizchip_conf.o(.text.wizchip_cris_exit) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_cs_select) refers to wizchip_conf.o(.text.wizchip_cs_select) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_cs_deselect) refers to wizchip_conf.o(.text.wizchip_cs_deselect) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_bus_readbyte) refers to wizchip_conf.o(.text.wizchip_bus_readbyte) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_bus_writebyte) refers to wizchip_conf.o(.text.wizchip_bus_writebyte) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_spi_readbyte) refers to wizchip_conf.o(.text.wizchip_spi_readbyte) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_spi_writebyte) refers to wizchip_conf.o(.text.wizchip_spi_writebyte) for [Anonymous Symbol]
    wizchip_conf.o(.text.reg_wizchip_cris_cbfunc) refers to wizchip_conf.o(.text.wizchip_cris_exit) for wizchip_cris_exit
    wizchip_conf.o(.text.reg_wizchip_cris_cbfunc) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    wizchip_conf.o(.text.reg_wizchip_cris_cbfunc) refers to wizchip_conf.o(.text.wizchip_cris_enter) for wizchip_cris_enter
    wizchip_conf.o(.ARM.exidx.text.reg_wizchip_cris_cbfunc) refers to wizchip_conf.o(.text.reg_wizchip_cris_cbfunc) for [Anonymous Symbol]
    wizchip_conf.o(.text.reg_wizchip_cs_cbfunc) refers to wizchip_conf.o(.text.wizchip_cs_deselect) for wizchip_cs_deselect
    wizchip_conf.o(.text.reg_wizchip_cs_cbfunc) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    wizchip_conf.o(.text.reg_wizchip_cs_cbfunc) refers to wizchip_conf.o(.text.wizchip_cs_select) for wizchip_cs_select
    wizchip_conf.o(.ARM.exidx.text.reg_wizchip_cs_cbfunc) refers to wizchip_conf.o(.text.reg_wizchip_cs_cbfunc) for [Anonymous Symbol]
    wizchip_conf.o(.text.reg_wizchip_bus_cbfunc) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    wizchip_conf.o(.text.reg_wizchip_bus_cbfunc) refers to wizchip_conf.o(.text.wizchip_bus_writebyte) for wizchip_bus_writebyte
    wizchip_conf.o(.text.reg_wizchip_bus_cbfunc) refers to wizchip_conf.o(.text.wizchip_bus_readbyte) for wizchip_bus_readbyte
    wizchip_conf.o(.ARM.exidx.text.reg_wizchip_bus_cbfunc) refers to wizchip_conf.o(.text.reg_wizchip_bus_cbfunc) for [Anonymous Symbol]
    wizchip_conf.o(.text.reg_wizchip_spi_cbfunc) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    wizchip_conf.o(.text.reg_wizchip_spi_cbfunc) refers to wizchip_conf.o(.text.wizchip_spi_writebyte) for wizchip_spi_writebyte
    wizchip_conf.o(.text.reg_wizchip_spi_cbfunc) refers to wizchip_conf.o(.text.wizchip_spi_readbyte) for wizchip_spi_readbyte
    wizchip_conf.o(.ARM.exidx.text.reg_wizchip_spi_cbfunc) refers to wizchip_conf.o(.text.reg_wizchip_spi_cbfunc) for [Anonymous Symbol]
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizchip_sw_reset) for wizchip_sw_reset
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizchip_init) for wizchip_init
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizchip_clrinterrupt) for wizchip_clrinterrupt
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizphy_setphyconf) for wizphy_setphyconf
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizphy_getphyconf) for wizphy_getphyconf
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizphy_getphypmode) for wizphy_getphypmode
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizchip_getinterrupt) for wizchip_getinterrupt
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizchip_setinterruptmask) for wizchip_setinterruptmask
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizchip_getinterruptmask) for wizchip_getinterruptmask
    wizchip_conf.o(.text.ctlwizchip) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.text.ctlwizchip) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizphy_reset) for wizphy_reset
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizphy_setphypmode) for wizphy_setphypmode
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.text.wizphy_getphylink) for wizphy_getphylink
    wizchip_conf.o(.text.ctlwizchip) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    wizchip_conf.o(.ARM.exidx.text.ctlwizchip) refers to wizchip_conf.o(.text.ctlwizchip) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_sw_reset) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.text.wizchip_sw_reset) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.text.wizchip_sw_reset) refers to w5500.o(.text.WIZCHIP_READ_BUF) for WIZCHIP_READ_BUF
    wizchip_conf.o(.text.wizchip_sw_reset) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for WIZCHIP_WRITE_BUF
    wizchip_conf.o(.ARM.exidx.text.wizchip_sw_reset) refers to wizchip_conf.o(.text.wizchip_sw_reset) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_init) refers to wizchip_conf.o(.text.wizchip_sw_reset) for wizchip_sw_reset
    wizchip_conf.o(.text.wizchip_init) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.ARM.exidx.text.wizchip_init) refers to wizchip_conf.o(.text.wizchip_init) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_clrinterrupt) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.ARM.exidx.text.wizchip_clrinterrupt) refers to wizchip_conf.o(.text.wizchip_clrinterrupt) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_getinterrupt) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizchip_getinterrupt) refers to wizchip_conf.o(.text.wizchip_getinterrupt) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_setinterruptmask) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.ARM.exidx.text.wizchip_setinterruptmask) refers to wizchip_conf.o(.text.wizchip_setinterruptmask) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_getinterruptmask) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizchip_getinterruptmask) refers to wizchip_conf.o(.text.wizchip_getinterruptmask) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_reset) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.text.wizphy_reset) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.ARM.exidx.text.wizphy_reset) refers to wizchip_conf.o(.text.wizphy_reset) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_setphyconf) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.text.wizphy_setphyconf) refers to wizchip_conf.o(.text.wizphy_reset) for wizphy_reset
    wizchip_conf.o(.ARM.exidx.text.wizphy_setphyconf) refers to wizchip_conf.o(.text.wizphy_setphyconf) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_getphyconf) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizphy_getphyconf) refers to wizchip_conf.o(.text.wizphy_getphyconf) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_setphypmode) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.text.wizphy_setphypmode) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.text.wizphy_setphypmode) refers to wizchip_conf.o(.text.wizphy_reset) for wizphy_reset
    wizchip_conf.o(.ARM.exidx.text.wizphy_setphypmode) refers to wizchip_conf.o(.text.wizphy_setphypmode) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_getphypmode) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizphy_getphypmode) refers to wizchip_conf.o(.text.wizphy_getphypmode) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_getphylink) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizphy_getphylink) refers to wizchip_conf.o(.text.wizphy_getphylink) for [Anonymous Symbol]
    wizchip_conf.o(.text.ctlnetwork) refers to wizchip_conf.o(.text.wizchip_setnetinfo) for wizchip_setnetinfo
    wizchip_conf.o(.text.ctlnetwork) refers to wizchip_conf.o(.text.wizchip_getnetinfo) for wizchip_getnetinfo
    wizchip_conf.o(.text.ctlnetwork) refers to wizchip_conf.o(.text.wizchip_setnetmode) for wizchip_setnetmode
    wizchip_conf.o(.text.ctlnetwork) refers to wizchip_conf.o(.text.wizchip_getnetmode) for wizchip_getnetmode
    wizchip_conf.o(.text.ctlnetwork) refers to wizchip_conf.o(.text.wizchip_settimeout) for wizchip_settimeout
    wizchip_conf.o(.text.ctlnetwork) refers to wizchip_conf.o(.text.wizchip_gettimeout) for wizchip_gettimeout
    wizchip_conf.o(.ARM.exidx.text.ctlnetwork) refers to wizchip_conf.o(.text.ctlnetwork) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_setnetinfo) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for WIZCHIP_WRITE_BUF
    wizchip_conf.o(.text.wizchip_setnetinfo) refers to wizchip_conf.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_setnetinfo) refers to wizchip_conf.o(.text.wizchip_setnetinfo) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_getnetinfo) refers to w5500.o(.text.WIZCHIP_READ_BUF) for WIZCHIP_READ_BUF
    wizchip_conf.o(.text.wizchip_getnetinfo) refers to wizchip_conf.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    wizchip_conf.o(.ARM.exidx.text.wizchip_getnetinfo) refers to wizchip_conf.o(.text.wizchip_getnetinfo) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_setnetmode) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.text.wizchip_setnetmode) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.ARM.exidx.text.wizchip_setnetmode) refers to wizchip_conf.o(.text.wizchip_setnetmode) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_getnetmode) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizchip_getnetmode) refers to wizchip_conf.o(.text.wizchip_getnetmode) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_settimeout) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    wizchip_conf.o(.ARM.exidx.text.wizchip_settimeout) refers to wizchip_conf.o(.text.wizchip_settimeout) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizchip_gettimeout) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizchip_gettimeout) refers to wizchip_conf.o(.text.wizchip_gettimeout) for [Anonymous Symbol]
    wizchip_conf.o(.text.wizphy_getphystat) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    wizchip_conf.o(.ARM.exidx.text.wizphy_getphystat) refers to wizchip_conf.o(.text.wizphy_getphystat) for [Anonymous Symbol]
    wizchip_conf.o(.data.WIZCHIP) refers to wizchip_conf.o(.text.wizchip_cris_enter) for wizchip_cris_enter
    wizchip_conf.o(.data.WIZCHIP) refers to wizchip_conf.o(.text.wizchip_cris_exit) for wizchip_cris_exit
    wizchip_conf.o(.data.WIZCHIP) refers to wizchip_conf.o(.text.wizchip_cs_select) for wizchip_cs_select
    wizchip_conf.o(.data.WIZCHIP) refers to wizchip_conf.o(.text.wizchip_cs_deselect) for wizchip_cs_deselect
    wizchip_conf.o(.data.WIZCHIP) refers to wizchip_conf.o(.text.wizchip_bus_readbyte) for wizchip_bus_readbyte
    wizchip_conf.o(.data.WIZCHIP) refers to wizchip_conf.o(.text.wizchip_bus_writebyte) for wizchip_bus_writebyte
    socket.o(.text.socket) refers to socket.o(.text.close) for close
    socket.o(.text.socket) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.socket) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.socket) refers to socket.o(.data.sock_any_port) for [Anonymous Symbol]
    socket.o(.text.socket) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.socket) refers to socket.o(.text.socket) for [Anonymous Symbol]
    socket.o(.text.close) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.close) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.close) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.close) refers to socket.o(.text.close) for [Anonymous Symbol]
    socket.o(.text.listen) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.listen) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.listen) refers to socket.o(.text.close) for close
    socket.o(.ARM.exidx.text.listen) refers to socket.o(.text.listen) for [Anonymous Symbol]
    socket.o(.text.connect) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.connect) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for WIZCHIP_WRITE_BUF
    socket.o(.text.connect) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.connect) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.connect) refers to socket.o(.text.connect) for [Anonymous Symbol]
    socket.o(.text.disconnect) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.disconnect) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.disconnect) refers to socket.o(.text.close) for close
    socket.o(.text.disconnect) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.disconnect) refers to socket.o(.text.disconnect) for [Anonymous Symbol]
    socket.o(.text.send) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.send) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.send) refers to w5500.o(.text.getSn_TX_FSR) for getSn_TX_FSR
    socket.o(.text.send) refers to w5500.o(.text.wiz_send_data) for wiz_send_data
    socket.o(.text.send) refers to socket.o(.text.close) for close
    socket.o(.text.send) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.send) refers to socket.o(.text.send) for [Anonymous Symbol]
    socket.o(.text.recv) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.recv) refers to w5500.o(.text.getSn_RX_RSR) for getSn_RX_RSR
    socket.o(.text.recv) refers to w5500.o(.text.getSn_TX_FSR) for getSn_TX_FSR
    socket.o(.text.recv) refers to w5500.o(.text.wiz_recv_data) for wiz_recv_data
    socket.o(.text.recv) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.recv) refers to socket.o(.text.close) for close
    socket.o(.text.recv) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.recv) refers to socket.o(.text.recv) for [Anonymous Symbol]
    socket.o(.text.sendto) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.sendto) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for WIZCHIP_WRITE_BUF
    socket.o(.text.sendto) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.sendto) refers to w5500.o(.text.getSn_TX_FSR) for getSn_TX_FSR
    socket.o(.text.sendto) refers to w5500.o(.text.wiz_send_data) for wiz_send_data
    socket.o(.text.sendto) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.sendto) refers to socket.o(.text.sendto) for [Anonymous Symbol]
    socket.o(.text.recvfrom) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.recvfrom) refers to w5500.o(.text.wiz_recv_data) for wiz_recv_data
    socket.o(.text.recvfrom) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.recvfrom) refers to w5500.o(.text.getSn_RX_RSR) for getSn_RX_RSR
    socket.o(.text.recvfrom) refers to socket.o(.text.close) for close
    socket.o(.text.recvfrom) refers to w5500.o(.text.wiz_recv_ignore) for wiz_recv_ignore
    socket.o(.text.recvfrom) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.recvfrom) refers to socket.o(.text.recvfrom) for [Anonymous Symbol]
    socket.o(.text.ctlsocket) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.ctlsocket) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.ctlsocket) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.ctlsocket) refers to socket.o(.text.ctlsocket) for [Anonymous Symbol]
    socket.o(.text.setsockopt) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    socket.o(.text.setsockopt) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for WIZCHIP_WRITE_BUF
    socket.o(.text.setsockopt) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.ARM.exidx.text.setsockopt) refers to socket.o(.text.setsockopt) for [Anonymous Symbol]
    socket.o(.text.getsockopt) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    socket.o(.text.getsockopt) refers to w5500.o(.text.getSn_RX_RSR) for getSn_RX_RSR
    socket.o(.text.getsockopt) refers to w5500.o(.text.WIZCHIP_READ_BUF) for WIZCHIP_READ_BUF
    socket.o(.text.getsockopt) refers to w5500.o(.text.getSn_TX_FSR) for getSn_TX_FSR
    socket.o(.text.getsockopt) refers to socket.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    socket.o(.ARM.exidx.text.getsockopt) refers to socket.o(.text.getsockopt) for [Anonymous Symbol]
    w5500.o(.text.WIZCHIP_READ) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    w5500.o(.ARM.exidx.text.WIZCHIP_READ) refers to w5500.o(.text.WIZCHIP_READ) for [Anonymous Symbol]
    w5500.o(.text.WIZCHIP_WRITE) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    w5500.o(.ARM.exidx.text.WIZCHIP_WRITE) refers to w5500.o(.text.WIZCHIP_WRITE) for [Anonymous Symbol]
    w5500.o(.text.WIZCHIP_READ_BUF) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    w5500.o(.ARM.exidx.text.WIZCHIP_READ_BUF) refers to w5500.o(.text.WIZCHIP_READ_BUF) for [Anonymous Symbol]
    w5500.o(.text.WIZCHIP_WRITE_BUF) refers to wizchip_conf.o(.data.WIZCHIP) for WIZCHIP
    w5500.o(.ARM.exidx.text.WIZCHIP_WRITE_BUF) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for [Anonymous Symbol]
    w5500.o(.text.getSn_TX_FSR) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    w5500.o(.ARM.exidx.text.getSn_TX_FSR) refers to w5500.o(.text.getSn_TX_FSR) for [Anonymous Symbol]
    w5500.o(.text.getSn_RX_RSR) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    w5500.o(.ARM.exidx.text.getSn_RX_RSR) refers to w5500.o(.text.getSn_RX_RSR) for [Anonymous Symbol]
    w5500.o(.text.wiz_send_data) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    w5500.o(.text.wiz_send_data) refers to w5500.o(.text.WIZCHIP_WRITE_BUF) for WIZCHIP_WRITE_BUF
    w5500.o(.text.wiz_send_data) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    w5500.o(.ARM.exidx.text.wiz_send_data) refers to w5500.o(.text.wiz_send_data) for [Anonymous Symbol]
    w5500.o(.text.wiz_recv_data) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    w5500.o(.text.wiz_recv_data) refers to w5500.o(.text.WIZCHIP_READ_BUF) for WIZCHIP_READ_BUF
    w5500.o(.text.wiz_recv_data) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    w5500.o(.ARM.exidx.text.wiz_recv_data) refers to w5500.o(.text.wiz_recv_data) for [Anonymous Symbol]
    w5500.o(.text.wiz_recv_ignore) refers to w5500.o(.text.WIZCHIP_READ) for WIZCHIP_READ
    w5500.o(.text.wiz_recv_ignore) refers to w5500.o(.text.WIZCHIP_WRITE) for WIZCHIP_WRITE
    w5500.o(.ARM.exidx.text.wiz_recv_ignore) refers to w5500.o(.text.wiz_recv_ignore) for [Anonymous Symbol]
    uart.o(.text.Uart_EnableIrq) refers to ddl.o(.text.SetBit) for SetBit
    uart.o(.ARM.exidx.text.Uart_EnableIrq) refers to uart.o(.text.Uart_EnableIrq) for [Anonymous Symbol]
    uart.o(.text.Uart_DisableIrq) refers to ddl.o(.text.SetBit) for SetBit
    uart.o(.ARM.exidx.text.Uart_DisableIrq) refers to uart.o(.text.Uart_DisableIrq) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_SetMultiMode) refers to uart.o(.text.Uart_SetMultiMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_HdModeEnable) refers to uart.o(.text.Uart_HdModeEnable) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_HdModeDisable) refers to uart.o(.text.Uart_HdModeDisable) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_SetTb8) refers to uart.o(.text.Uart_SetTb8) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_GetRb8) refers to uart.o(.text.Uart_GetRb8) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_SetSaddr) refers to uart.o(.text.Uart_SetSaddr) for [Anonymous Symbol]
    uart.o(.text.Uart_EnableFunc) refers to ddl.o(.text.SetBit) for SetBit
    uart.o(.ARM.exidx.text.Uart_EnableFunc) refers to uart.o(.text.Uart_EnableFunc) for [Anonymous Symbol]
    uart.o(.text.Uart_DisableFunc) refers to ddl.o(.text.SetBit) for SetBit
    uart.o(.ARM.exidx.text.Uart_DisableFunc) refers to uart.o(.text.Uart_DisableFunc) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_GetIsr) refers to uart.o(.text.Uart_GetIsr) for [Anonymous Symbol]
    uart.o(.text.Uart_GetStatus) refers to ddl.o(.text.GetBit) for GetBit
    uart.o(.ARM.exidx.text.Uart_GetStatus) refers to uart.o(.text.Uart_GetStatus) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_ClrIsr) refers to uart.o(.text.Uart_ClrIsr) for [Anonymous Symbol]
    uart.o(.text.Uart_ClrStatus) refers to ddl.o(.text.SetBit) for SetBit
    uart.o(.ARM.exidx.text.Uart_ClrStatus) refers to uart.o(.text.Uart_ClrStatus) for [Anonymous Symbol]
    uart.o(.text.Uart_SendDataPoll) refers to ddl.o(.text.GetBit) for GetBit
    uart.o(.text.Uart_SendDataPoll) refers to uart.o(.text.Uart_ClrStatus) for Uart_ClrStatus
    uart.o(.ARM.exidx.text.Uart_SendDataPoll) refers to uart.o(.text.Uart_SendDataPoll) for [Anonymous Symbol]
    uart.o(.text.Uart_SendDataPollTimeOut) refers to ddl.o(.text.GetBit) for GetBit
    uart.o(.text.Uart_SendDataPollTimeOut) refers to uart.o(.text.Uart_ClrStatus) for Uart_ClrStatus
    uart.o(.ARM.exidx.text.Uart_SendDataPollTimeOut) refers to uart.o(.text.Uart_SendDataPollTimeOut) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_SendDataIt) refers to uart.o(.text.Uart_SendDataIt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.Uart_ReceiveData) refers to uart.o(.text.Uart_ReceiveData) for [Anonymous Symbol]
    uart.o(.text.Uart_Init) refers to ffltui.o(.text) for __aeabi_ui2f
    uart.o(.text.Uart_Init) refers to fdiv.o(.text) for __aeabi_fdiv
    uart.o(.text.Uart_Init) refers to fadd.o(.text) for __aeabi_fadd
    uart.o(.text.Uart_Init) refers to ffixi.o(.text) for __aeabi_f2iz
    uart.o(.text.Uart_Init) refers to uart.o(.text.Uart_EnableFunc) for Uart_EnableFunc
    uart.o(.ARM.exidx.text.Uart_Init) refers to uart.o(.text.Uart_Init) for [Anonymous Symbol]
    main.o(.text.Can_IRQHandler) refers to can.o(.text.CAN_IrqFlgGet) for CAN_IrqFlgGet
    main.o(.text.Can_IRQHandler) refers to can.o(.text.CAN_IrqFlgClr) for CAN_IrqFlgClr
    main.o(.text.Can_IRQHandler) refers to can.o(.text.CAN_IrqCmd) for CAN_IrqCmd
    main.o(.text.Can_IRQHandler) refers to can.o(.text.CAN_Receive) for CAN_Receive
    main.o(.text.Can_IRQHandler) refers to main.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Can_IRQHandler) refers to main.o(.text.Can_IRQHandler) for [Anonymous Symbol]
    main.o(.text.Uart0_IRQHandler) refers to uart.o(.text.Uart_GetStatus) for Uart_GetStatus
    main.o(.text.Uart0_IRQHandler) refers to uart.o(.text.Uart_ClrStatus) for Uart_ClrStatus
    main.o(.text.Uart0_IRQHandler) refers to uart.o(.text.Uart_ReceiveData) for Uart_ReceiveData
    main.o(.text.Uart0_IRQHandler) refers to uart.o(.text.Uart_DisableIrq) for Uart_DisableIrq
    main.o(.text.Uart0_IRQHandler) refers to uart.o(.text.Uart_SendDataIt) for Uart_SendDataIt
    main.o(.text.Uart0_IRQHandler) refers to uart.o(.text.Uart_EnableIrq) for Uart_EnableIrq
    main.o(.text.Uart0_IRQHandler) refers to main.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    main.o(.text.Uart0_IRQHandler) refers to main.o(.data.u8TxData) for u8TxData
    main.o(.ARM.exidx.text.Uart0_IRQHandler) refers to main.o(.text.Uart0_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to sysctrl.o(.text.Sysctrl_SetXTHFreq) for Sysctrl_SetXTHFreq
    main.o(.text.main) refers to sysctrl.o(.text.Sysctrl_XTHDriverCfg) for Sysctrl_XTHDriverCfg
    main.o(.text.main) refers to sysctrl.o(.text.Sysctrl_SetXTHStableTime) for Sysctrl_SetXTHStableTime
    main.o(.text.main) refers to sysctrl.o(.text.Sysctrl_ClkSourceEnable) for Sysctrl_ClkSourceEnable
    main.o(.text.main) refers to ddl.o(.text.delay1ms) for delay1ms
    main.o(.text.main) refers to sysctrl.o(.text.Sysctrl_SysClkSwitch) for Sysctrl_SysClkSwitch
    main.o(.text.main) refers to ddl.o(.text.ddl_memclr) for ddl_memclr
    main.o(.text.main) refers to gpio.o(.text.Gpio_WriteOutputIO) for Gpio_WriteOutputIO
    main.o(.text.main) refers to reset.o(.text.Reset_RstPeripheral0) for Reset_RstPeripheral0
    main.o(.text.main) refers to spi.o(.text.Spi_Init) for Spi_Init
    main.o(.text.main) refers to gpio.o(.text.Gpio_ClrIO) for Gpio_ClrIO
    main.o(.text.main) refers to can.o(.text.CAN_Init) for CAN_Init
    main.o(.text.main) refers to can.o(.text.CAN_FilterConfig) for CAN_FilterConfig
    main.o(.text.main) refers to can.o(.text.CAN_IrqCmd) for CAN_IrqCmd
    main.o(.text.main) refers to interrupts_hc32f072.o(.text.EnableNvic) for EnableNvic
    main.o(.text.main) refers to main.o(.text.W5500_Init) for W5500_Init
    main.o(.text.main) refers to main.o(.text.App_PortInit) for App_PortInit
    main.o(.text.main) refers to main.o(.text.App_UartCfg) for App_UartCfg
    main.o(.text.main) refers to spi.o(.text.Spi_ReceiveBuf) for Spi_ReceiveBuf
    main.o(.text.main) refers to spi.o(.text.Spi_SendBuf) for Spi_SendBuf
    main.o(.text.main) refers to sysctrl.o(.text.Sysctrl_SetPeripheralGate) for Sysctrl_SetPeripheralGate
    main.o(.text.main) refers to gpio.o(.text.Gpio_Init) for Gpio_Init
    main.o(.text.main) refers to gpio.o(.text.Gpio_SetAfMode) for Gpio_SetAfMode
    main.o(.text.main) refers to spi.o(.text.Spi_SetCS) for Spi_SetCS
    main.o(.text.main) refers to main.o(.bss.rx_buf) for rx_buf
    main.o(.text.main) refers to main.o(.data.tx_buf) for tx_buf
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.W5500_Init) refers to memcpya.o(.text) for __aeabi_memcpy
    main.o(.text.W5500_Init) refers to wizchip_conf.o(.text.wizchip_init) for wizchip_init
    main.o(.text.W5500_Init) refers to wizchip_conf.o(.text.wizchip_setnetinfo) for wizchip_setnetinfo
    main.o(.text.W5500_Init) refers to wizchip_conf.o(.text.ctlwizchip) for ctlwizchip
    main.o(.text.W5500_Init) refers to main.o(.rodata..L__const.W5500_Init.netInfo) for [Anonymous Symbol]
    main.o(.text.W5500_Init) refers to main.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.W5500_Init) refers to main.o(.text.W5500_Init) for [Anonymous Symbol]
    main.o(.text.App_PortInit) refers to ddl.o(.text.ddl_memclr) for ddl_memclr
    main.o(.text.App_PortInit) refers to sysctrl.o(.text.Sysctrl_SetPeripheralGate) for Sysctrl_SetPeripheralGate
    main.o(.text.App_PortInit) refers to gpio.o(.text.Gpio_Init) for Gpio_Init
    main.o(.text.App_PortInit) refers to gpio.o(.text.Gpio_SetAfMode) for Gpio_SetAfMode
    main.o(.ARM.exidx.text.App_PortInit) refers to main.o(.text.App_PortInit) for [Anonymous Symbol]
    main.o(.text.App_UartCfg) refers to ddl.o(.text.ddl_memclr) for ddl_memclr
    main.o(.text.App_UartCfg) refers to sysctrl.o(.text.Sysctrl_SetPeripheralGate) for Sysctrl_SetPeripheralGate
    main.o(.text.App_UartCfg) refers to sysctrl.o(.text.Sysctrl_GetPClkFreq) for Sysctrl_GetPClkFreq
    main.o(.text.App_UartCfg) refers to uart.o(.text.Uart_Init) for Uart_Init
    main.o(.text.App_UartCfg) refers to uart.o(.text.Uart_ClrStatus) for Uart_ClrStatus
    main.o(.text.App_UartCfg) refers to uart.o(.text.Uart_EnableIrq) for Uart_EnableIrq
    main.o(.text.App_UartCfg) refers to interrupts_hc32f072.o(.text.EnableNvic) for EnableNvic
    main.o(.ARM.exidx.text.App_UartCfg) refers to main.o(.text.App_UartCfg) for [Anonymous Symbol]
    main.o(.text.SendData) refers to socket.o(.text.send) for send
    main.o(.ARM.exidx.text.SendData) refers to main.o(.text.SendData) for [Anonymous Symbol]
    main.o(.text.ReceiveData) refers to socket.o(.text.recv) for recv
    main.o(.ARM.exidx.text.ReceiveData) refers to main.o(.text.ReceiveData) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_hc32f072.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_hc32f072.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to system_hc32f072.o(.text.$Sub$$main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to system_hc32f072.o(.text.$Sub$$main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing system_hc32f072.o(.text), (0 bytes).
    Removing system_hc32f072.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_hc32f072.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_hc32f072.o(.ARM.exidx.text.$Sub$$main), (8 bytes).
    Removing interrupts_hc32f072.o(.text), (0 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.EnableNvic), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.PORTA_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.PORTB_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.PORTC_E_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.PORTD_F_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.DMAC_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM3_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.UART0_2_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.UART1_3_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.LPUART0_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.LPUART1_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.SPI0_I2S0_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.SPI1_I2S1_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.I2C0_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.I2C1_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM0_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM1_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM4_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM5_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.TIM6_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.PCA_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.WDT_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.ADC_DAC_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.VC0_1_2_LVD_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.USBFS_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.CAN_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.FLASH_RAM_IRQHandler), (8 bytes).
    Removing interrupts_hc32f072.o(.ARM.exidx.text.CLKTRIM_CTS_IRQHandler), (8 bytes).
    Removing startup_hc32f072.o(HEAP), (512 bytes).
    Removing ddl.o(.text), (0 bytes).
    Removing ddl.o(.text.Log2), (22 bytes).
    Removing ddl.o(.ARM.exidx.text.Log2), (8 bytes).
    Removing ddl.o(.ARM.exidx.text.ddl_memclr), (8 bytes).
    Removing ddl.o(.ARM.exidx.text.delay1ms), (8 bytes).
    Removing ddl.o(.text.delay100us), (80 bytes).
    Removing ddl.o(.ARM.exidx.text.delay100us), (8 bytes).
    Removing ddl.o(.ARM.exidx.text.delay10us), (8 bytes).
    Removing ddl.o(.ARM.exidx.text.SetBit), (8 bytes).
    Removing ddl.o(.ARM.exidx.text.GetBit), (8 bytes).
    Removing sysctrl.o(.text), (0 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_ClkSourceEnable), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_XTHDriverCfg), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_XTLDriverCfg), (40 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_XTLDriverCfg), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetXTHStableTime), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetRCLStableTime), (28 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetRCLStableTime), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetXTLStableTime), (24 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetXTLStableTime), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetPLLStableTime), (28 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetPLLStableTime), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SysClkSwitch), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_GetHClkFreq), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_GetPClkFreq), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_ClkInit), (156 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_ClkInit), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetHCLKDiv), (44 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetHCLKDiv), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetPCLKDiv), (44 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetPCLKDiv), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_ClkDeInit), (132 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_ClkDeInit), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetRCHTrim), (72 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetRCHTrim), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetXTHFreq), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetPLLFreq), (184 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetPLLFreq), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetRCLTrim), (44 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetRCLTrim), (8 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetPeripheralGate), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_GetPeripheralGate), (28 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_GetPeripheralGate), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_SetFunc), (36 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_SetFunc), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_UsbClkSel), (40 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_UsbClkSel), (8 bytes).
    Removing sysctrl.o(.text.Sysctrl_TimerPllClkSel), (28 bytes).
    Removing sysctrl.o(.ARM.exidx.text.Sysctrl_TimerPllClkSel), (8 bytes).
    Removing can.o(.text), (0 bytes).
    Removing can.o(.ARM.exidx.text.CAN_Init), (8 bytes).
    Removing can.o(.text.CAN_DeInit), (16 bytes).
    Removing can.o(.ARM.exidx.text.CAN_DeInit), (8 bytes).
    Removing can.o(.text.CAN_ModeConfig), (60 bytes).
    Removing can.o(.ARM.exidx.text.CAN_ModeConfig), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_FilterConfig), (8 bytes).
    Removing can.o(.text.CAN_SetFrame), (60 bytes).
    Removing can.o(.ARM.exidx.text.CAN_SetFrame), (8 bytes).
    Removing can.o(.text.CAN_TransmitCmd), (16 bytes).
    Removing can.o(.ARM.exidx.text.CAN_TransmitCmd), (8 bytes).
    Removing can.o(.text.CAN_TxBufStatusGet), (16 bytes).
    Removing can.o(.ARM.exidx.text.CAN_TxBufStatusGet), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_Receive), (8 bytes).
    Removing can.o(.text.CAN_RxBufStatusGet), (16 bytes).
    Removing can.o(.ARM.exidx.text.CAN_RxBufStatusGet), (8 bytes).
    Removing can.o(.text.CAN_ErrorStatusGet), (24 bytes).
    Removing can.o(.ARM.exidx.text.CAN_ErrorStatusGet), (8 bytes).
    Removing can.o(.text.CAN_StatusGet), (16 bytes).
    Removing can.o(.ARM.exidx.text.CAN_StatusGet), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_IrqCmd), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_IrqFlgGet), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_IrqFlgClr), (8 bytes).
    Removing can.o(.text.CAN_RxErrorCntGet), (12 bytes).
    Removing can.o(.ARM.exidx.text.CAN_RxErrorCntGet), (8 bytes).
    Removing can.o(.text.CAN_TxErrorCntGet), (12 bytes).
    Removing can.o(.ARM.exidx.text.CAN_TxErrorCntGet), (8 bytes).
    Removing can.o(.text.CAN_ArbitrationLostCap), (16 bytes).
    Removing can.o(.ARM.exidx.text.CAN_ArbitrationLostCap), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_Init), (8 bytes).
    Removing gpio.o(.text.Gpio_GetInputIO), (16 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_GetInputIO), (8 bytes).
    Removing gpio.o(.text.Gpio_GetInputData), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_GetInputData), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_WriteOutputIO), (8 bytes).
    Removing gpio.o(.text.Gpio_ReadOutputIO), (16 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_ReadOutputIO), (8 bytes).
    Removing gpio.o(.text.Gpio_SetPort), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SetPort), (8 bytes).
    Removing gpio.o(.text.Gpio_SetIO), (20 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SetIO), (8 bytes).
    Removing gpio.o(.text.Gpio_ClrPort), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_ClrPort), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_ClrIO), (8 bytes).
    Removing gpio.o(.text.Gpio_SetClrPort), (12 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SetClrPort), (8 bytes).
    Removing gpio.o(.text.Gpio_SetAnalogMode), (20 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SetAnalogMode), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SetAfMode), (8 bytes).
    Removing gpio.o(.text.Gpio_EnableIrq), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_EnableIrq), (8 bytes).
    Removing gpio.o(.text.Gpio_DisableIrq), (28 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_DisableIrq), (8 bytes).
    Removing gpio.o(.text.Gpio_GetIrqStatus), (16 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_GetIrqStatus), (8 bytes).
    Removing gpio.o(.text.Gpio_ClearIrq), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_ClearIrq), (8 bytes).
    Removing gpio.o(.text.Gpio_SfIrqModeCfg), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfIrqModeCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfIrPolCfg), (28 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfIrPolCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfHClkOutputCfg), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfHClkOutputCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfPClkOutputCfg), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfPClkOutputCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfExtClkCfg), (24 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfExtClkCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfSsnCfg), (48 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfSsnCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfTimGCfg), (60 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfTimGCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfTimECfg), (60 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfTimECfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfTimCCfg), (32 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfTimCCfg), (8 bytes).
    Removing gpio.o(.text.Gpio_SfPcaCfg), (32 bytes).
    Removing gpio.o(.ARM.exidx.text.Gpio_SfPcaCfg), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.text.Spi_GetStatus), (10 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_GetStatus), (8 bytes).
    Removing spi.o(.text.Spi_ClearStatus), (8 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_ClearStatus), (8 bytes).
    Removing spi.o(.text.Spi_IrqEnable), (12 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_IrqEnable), (8 bytes).
    Removing spi.o(.text.Spi_IrqDisable), (12 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_IrqDisable), (8 bytes).
    Removing spi.o(.text.Spi_FuncEnable), (10 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_FuncEnable), (8 bytes).
    Removing spi.o(.text.Spi_FuncDisable), (10 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_FuncDisable), (8 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_SetCS), (8 bytes).
    Removing spi.o(.text.Spi_SendData), (6 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_SendData), (8 bytes).
    Removing spi.o(.text.Spi_RWByte), (20 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_RWByte), (8 bytes).
    Removing spi.o(.text.Spi_Slave_DummyWriteData), (10 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_Slave_DummyWriteData), (8 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_SendBuf), (8 bytes).
    Removing spi.o(.text.Spi_ReceiveData), (6 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_ReceiveData), (8 bytes).
    Removing spi.o(.ARM.exidx.text.Spi_ReceiveBuf), (8 bytes).
    Removing reset.o(.text), (0 bytes).
    Removing reset.o(.text.Reset_GetFlag), (16 bytes).
    Removing reset.o(.ARM.exidx.text.Reset_GetFlag), (8 bytes).
    Removing reset.o(.text.Reset_ClearFlag), (16 bytes).
    Removing reset.o(.ARM.exidx.text.Reset_ClearFlag), (8 bytes).
    Removing reset.o(.text.Reset_ClearFlagAll), (12 bytes).
    Removing reset.o(.ARM.exidx.text.Reset_ClearFlagAll), (8 bytes).
    Removing reset.o(.text.Reset_RstPeripheralAll), (20 bytes).
    Removing reset.o(.ARM.exidx.text.Reset_RstPeripheralAll), (8 bytes).
    Removing reset.o(.ARM.exidx.text.Reset_RstPeripheral0), (8 bytes).
    Removing reset.o(.text.Reset_RstPeripheral1), (20 bytes).
    Removing reset.o(.ARM.exidx.text.Reset_RstPeripheral1), (8 bytes).
    Removing wizchip_conf.o(.text), (0 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_cris_enter), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_cris_exit), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_cs_select), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_cs_deselect), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_bus_readbyte), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_bus_writebyte), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_spi_readbyte), (4 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_spi_readbyte), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_spi_writebyte), (2 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_spi_writebyte), (8 bytes).
    Removing wizchip_conf.o(.text.reg_wizchip_cris_cbfunc), (48 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.reg_wizchip_cris_cbfunc), (8 bytes).
    Removing wizchip_conf.o(.text.reg_wizchip_cs_cbfunc), (48 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.reg_wizchip_cs_cbfunc), (8 bytes).
    Removing wizchip_conf.o(.text.reg_wizchip_bus_cbfunc), (56 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.reg_wizchip_bus_cbfunc), (8 bytes).
    Removing wizchip_conf.o(.text.reg_wizchip_spi_cbfunc), (56 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.reg_wizchip_spi_cbfunc), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.ctlwizchip), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_sw_reset), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_init), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_clrinterrupt), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_getinterrupt), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_setinterruptmask), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_getinterruptmask), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_reset), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_setphyconf), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_getphyconf), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_setphypmode), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_getphypmode), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_getphylink), (8 bytes).
    Removing wizchip_conf.o(.text.ctlnetwork), (96 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.ctlnetwork), (8 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_setnetinfo), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_getnetinfo), (84 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_getnetinfo), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_setnetmode), (36 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_setnetmode), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_getnetmode), (10 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_getnetmode), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_settimeout), (36 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_settimeout), (8 bytes).
    Removing wizchip_conf.o(.text.wizchip_gettimeout), (40 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizchip_gettimeout), (8 bytes).
    Removing wizchip_conf.o(.text.wizphy_getphystat), (26 bytes).
    Removing wizchip_conf.o(.ARM.exidx.text.wizphy_getphystat), (8 bytes).
    Removing socket.o(.text), (0 bytes).
    Removing socket.o(.text.socket), (276 bytes).
    Removing socket.o(.ARM.exidx.text.socket), (8 bytes).
    Removing socket.o(.text.close), (100 bytes).
    Removing socket.o(.ARM.exidx.text.close), (8 bytes).
    Removing socket.o(.text.listen), (116 bytes).
    Removing socket.o(.ARM.exidx.text.listen), (8 bytes).
    Removing socket.o(.text.connect), (252 bytes).
    Removing socket.o(.ARM.exidx.text.connect), (8 bytes).
    Removing socket.o(.text.disconnect), (132 bytes).
    Removing socket.o(.ARM.exidx.text.disconnect), (8 bytes).
    Removing socket.o(.text.send), (280 bytes).
    Removing socket.o(.ARM.exidx.text.send), (8 bytes).
    Removing socket.o(.text.recv), (252 bytes).
    Removing socket.o(.ARM.exidx.text.recv), (8 bytes).
    Removing socket.o(.text.sendto), (312 bytes).
    Removing socket.o(.ARM.exidx.text.sendto), (8 bytes).
    Removing socket.o(.text.recvfrom), (440 bytes).
    Removing socket.o(.ARM.exidx.text.recvfrom), (8 bytes).
    Removing socket.o(.text.ctlsocket), (200 bytes).
    Removing socket.o(.ARM.exidx.text.ctlsocket), (8 bytes).
    Removing socket.o(.text.setsockopt), (260 bytes).
    Removing socket.o(.ARM.exidx.text.setsockopt), (8 bytes).
    Removing socket.o(.text.getsockopt), (300 bytes).
    Removing socket.o(.ARM.exidx.text.getsockopt), (8 bytes).
    Removing socket.o(.data.sock_any_port), (2 bytes).
    Removing socket.o(.bss..L_MergedGlobals), (28 bytes).
    Removing w5500.o(.text), (0 bytes).
    Removing w5500.o(.ARM.exidx.text.WIZCHIP_READ), (8 bytes).
    Removing w5500.o(.ARM.exidx.text.WIZCHIP_WRITE), (8 bytes).
    Removing w5500.o(.ARM.exidx.text.WIZCHIP_READ_BUF), (8 bytes).
    Removing w5500.o(.ARM.exidx.text.WIZCHIP_WRITE_BUF), (8 bytes).
    Removing w5500.o(.text.getSn_TX_FSR), (64 bytes).
    Removing w5500.o(.ARM.exidx.text.getSn_TX_FSR), (8 bytes).
    Removing w5500.o(.text.getSn_RX_RSR), (64 bytes).
    Removing w5500.o(.ARM.exidx.text.getSn_RX_RSR), (8 bytes).
    Removing w5500.o(.text.wiz_send_data), (80 bytes).
    Removing w5500.o(.ARM.exidx.text.wiz_send_data), (8 bytes).
    Removing w5500.o(.text.wiz_recv_data), (80 bytes).
    Removing w5500.o(.ARM.exidx.text.wiz_recv_data), (8 bytes).
    Removing w5500.o(.text.wiz_recv_ignore), (64 bytes).
    Removing w5500.o(.ARM.exidx.text.wiz_recv_ignore), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_EnableIrq), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_DisableIrq), (8 bytes).
    Removing uart.o(.text.Uart_SetMultiMode), (28 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_SetMultiMode), (8 bytes).
    Removing uart.o(.text.Uart_HdModeEnable), (12 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_HdModeEnable), (8 bytes).
    Removing uart.o(.text.Uart_HdModeDisable), (12 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_HdModeDisable), (8 bytes).
    Removing uart.o(.text.Uart_SetTb8), (16 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_SetTb8), (8 bytes).
    Removing uart.o(.text.Uart_GetRb8), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_GetRb8), (8 bytes).
    Removing uart.o(.text.Uart_SetSaddr), (6 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_SetSaddr), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_EnableFunc), (8 bytes).
    Removing uart.o(.text.Uart_DisableFunc), (16 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_DisableFunc), (8 bytes).
    Removing uart.o(.text.Uart_GetIsr), (6 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_GetIsr), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_GetStatus), (8 bytes).
    Removing uart.o(.text.Uart_ClrIsr), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_ClrIsr), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_ClrStatus), (8 bytes).
    Removing uart.o(.text.Uart_SendDataPoll), (56 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_SendDataPoll), (8 bytes).
    Removing uart.o(.text.Uart_SendDataPollTimeOut), (88 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_SendDataPollTimeOut), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_SendDataIt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_ReceiveData), (8 bytes).
    Removing uart.o(.ARM.exidx.text.Uart_Init), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Can_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.Uart0_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.W5500_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.App_PortInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.App_UartCfg), (8 bytes).
    Removing main.o(.text.SendData), (44 bytes).
    Removing main.o(.ARM.exidx.text.SendData), (8 bytes).
    Removing main.o(.text.ReceiveData), (24 bytes).
    Removing main.o(.ARM.exidx.text.ReceiveData), (8 bytes).
    Removing main.o(.bss.stcTxFrame), (20 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).

334 unused section(s) (total 8458 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    can.c                                    0x00000000   Number         0  can.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    ddl.c                                    0x00000000   Number         0  ddl.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    hc32f072/startup_hc32f072.s              0x00000000   Number         0  startup_hc32f072.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupts_hc32f072.c                    0x00000000   Number         0  interrupts_hc32f072.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    reset.c                                  0x00000000   Number         0  reset.o ABSOLUTE
    socket.c                                 0x00000000   Number         0  socket.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    sysctrl.c                                0x00000000   Number         0  sysctrl.o ABSOLUTE
    system_hc32f072.c                        0x00000000   Number         0  system_hc32f072.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    w5500.c                                  0x00000000   Number         0  w5500.o ABSOLUTE
    wizchip_conf.c                           0x00000000   Number         0  wizchip_conf.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_hc32f072.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       60  startup_hc32f072.o(.text)
    .text                                    0x00000110   Section        0  memcpya.o(.text)
    .text                                    0x00000134   Section        0  fadd.o(.text)
    .text                                    0x000001e6   Section        0  fdiv.o(.text)
    .text                                    0x00000262   Section        0  ffltui.o(.text)
    .text                                    0x00000270   Section        0  ffixi.o(.text)
    .text                                    0x000002a2   Section        0  uidiv_div0.o(.text)
    .text                                    0x000002e0   Section        0  iusefp.o(.text)
    .text                                    0x000002e0   Section        0  fepilogue.o(.text)
    .text                                    0x00000364   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x00000388   Section        0  system_hc32f072.o(.text.$Sub$$main)
    [Anonymous Symbol]                       0x00000396   Section        0  interrupts_hc32f072.o(.text.ADC_DAC_IRQHandler)
    [Anonymous Symbol]                       0x000003a2   Section        0  main.o(.text.App_PortInit)
    [Anonymous Symbol]                       0x000003f0   Section        0  main.o(.text.App_UartCfg)
    [Anonymous Symbol]                       0x00000458   Section        0  can.o(.text.CAN_FilterConfig)
    [Anonymous Symbol]                       0x000004d4   Section        0  interrupts_hc32f072.o(.text.CAN_IRQHandler)
    [Anonymous Symbol]                       0x000004dc   Section        0  can.o(.text.CAN_Init)
    __arm_cp.0_0                             0x00000584   Number         4  can.o(.text.CAN_Init)
    [Anonymous Symbol]                       0x00000588   Section        0  can.o(.text.CAN_IrqCmd)
    [Anonymous Symbol]                       0x0000059c   Section        0  can.o(.text.CAN_IrqFlgClr)
    __arm_cp.13_1                            0x000005ac   Number         4  can.o(.text.CAN_IrqFlgClr)
    [Anonymous Symbol]                       0x000005b0   Section        0  can.o(.text.CAN_IrqFlgGet)
    __arm_cp.12_0                            0x000005bc   Number         4  can.o(.text.CAN_IrqFlgGet)
    [Anonymous Symbol]                       0x000005c0   Section        0  can.o(.text.CAN_Receive)
    __arm_cp.7_0                             0x000005e0   Number         4  can.o(.text.CAN_Receive)
    __arm_cp.7_1                             0x000005e4   Number         4  can.o(.text.CAN_Receive)
    [Anonymous Symbol]                       0x000005e8   Section        0  interrupts_hc32f072.o(.text.CLKTRIM_CTS_IRQHandler)
    [Anonymous Symbol]                       0x000005f4   Section        0  main.o(.text.Can_IRQHandler)
    __arm_cp.0_0                             0x00000620   Number         4  main.o(.text.Can_IRQHandler)
    [Anonymous Symbol]                       0x00000624   Section        0  interrupts_hc32f072.o(.text.DMAC_IRQHandler)
    [Anonymous Symbol]                       0x0000062c   Section        0  interrupts_hc32f072.o(.text.EnableNvic)
    __arm_cp.0_0                             0x0000069c   Number         4  interrupts_hc32f072.o(.text.EnableNvic)
    __arm_cp.0_1                             0x000006a0   Number         4  interrupts_hc32f072.o(.text.EnableNvic)
    __arm_cp.0_2                             0x000006a4   Number         4  interrupts_hc32f072.o(.text.EnableNvic)
    __arm_cp.0_3                             0x000006a8   Number         4  interrupts_hc32f072.o(.text.EnableNvic)
    __arm_cp.0_4                             0x000006ac   Number         4  interrupts_hc32f072.o(.text.EnableNvic)
    [Anonymous Symbol]                       0x000006b0   Section        0  interrupts_hc32f072.o(.text.FLASH_RAM_IRQHandler)
    [Anonymous Symbol]                       0x000006bc   Section        0  ddl.o(.text.GetBit)
    [Anonymous Symbol]                       0x000006c8   Section        0  gpio.o(.text.Gpio_ClrIO)
    __arm_cp.8_0                             0x000006d8   Number         4  gpio.o(.text.Gpio_ClrIO)
    [Anonymous Symbol]                       0x000006dc   Section        0  gpio.o(.text.Gpio_Init)
    __arm_cp.0_0                             0x00000758   Number         4  gpio.o(.text.Gpio_Init)
    __arm_cp.0_1                             0x0000075c   Number         4  gpio.o(.text.Gpio_Init)
    __arm_cp.0_3                             0x00000760   Number         4  gpio.o(.text.Gpio_Init)
    [Anonymous Symbol]                       0x00000764   Section        0  gpio.o(.text.Gpio_SetAfMode)
    __arm_cp.11_0                            0x00000770   Number         4  gpio.o(.text.Gpio_SetAfMode)
    [Anonymous Symbol]                       0x00000774   Section        0  gpio.o(.text.Gpio_WriteOutputIO)
    __arm_cp.3_0                             0x00000784   Number         4  gpio.o(.text.Gpio_WriteOutputIO)
    [Anonymous Symbol]                       0x00000788   Section        0  interrupts_hc32f072.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x00000798   Section        0  interrupts_hc32f072.o(.text.I2C0_IRQHandler)
    [Anonymous Symbol]                       0x000007a0   Section        0  interrupts_hc32f072.o(.text.I2C1_IRQHandler)
    [Anonymous Symbol]                       0x000007a8   Section        0  interrupts_hc32f072.o(.text.LPUART0_IRQHandler)
    [Anonymous Symbol]                       0x000007b0   Section        0  interrupts_hc32f072.o(.text.LPUART1_IRQHandler)
    [Anonymous Symbol]                       0x000007b8   Section        0  interrupts_hc32f072.o(.text.PCA_IRQHandler)
    [Anonymous Symbol]                       0x000007c0   Section        0  interrupts_hc32f072.o(.text.PORTA_IRQHandler)
    [Anonymous Symbol]                       0x000007c8   Section        0  interrupts_hc32f072.o(.text.PORTB_IRQHandler)
    [Anonymous Symbol]                       0x000007d0   Section        0  interrupts_hc32f072.o(.text.PORTC_E_IRQHandler)
    [Anonymous Symbol]                       0x000007dc   Section        0  interrupts_hc32f072.o(.text.PORTD_F_IRQHandler)
    [Anonymous Symbol]                       0x000007e8   Section        0  reset.o(.text.Reset_RstPeripheral0)
    __arm_cp.4_0                             0x000007f8   Number         4  reset.o(.text.Reset_RstPeripheral0)
    [Anonymous Symbol]                       0x000007fc   Section        0  interrupts_hc32f072.o(.text.SPI0_I2S0_IRQHandler)
    [Anonymous Symbol]                       0x00000808   Section        0  interrupts_hc32f072.o(.text.SPI1_I2S1_IRQHandler)
    [Anonymous Symbol]                       0x00000814   Section        0  ddl.o(.text.SetBit)
    [Anonymous Symbol]                       0x0000082a   Section        0  spi.o(.text.Spi_Init)
    [Anonymous Symbol]                       0x0000084e   Section        0  spi.o(.text.Spi_ReceiveBuf)
    [Anonymous Symbol]                       0x00000878   Section        0  spi.o(.text.Spi_SendBuf)
    [Anonymous Symbol]                       0x000008a8   Section        0  spi.o(.text.Spi_SetCS)
    [Anonymous Symbol]                       0x000008ac   Section        0  interrupts_hc32f072.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000008b4   Section        0  sysctrl.o(.text.Sysctrl_ClkSourceEnable)
    __arm_cp.0_3                             0x000009f0   Number         4  sysctrl.o(.text.Sysctrl_ClkSourceEnable)
    __arm_cp.0_4                             0x000009f4   Number         4  sysctrl.o(.text.Sysctrl_ClkSourceEnable)
    __arm_cp.0_5                             0x000009f8   Number         4  sysctrl.o(.text.Sysctrl_ClkSourceEnable)
    [Anonymous Symbol]                       0x000009fc   Section        0  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    __arm_cp.8_0                             0x00000ad0   Number         4  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    __arm_cp.8_2                             0x00000ad4   Number         4  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    __arm_cp.8_4                             0x00000ad8   Number         4  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    __arm_cp.8_5                             0x00000adc   Number         4  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    __arm_cp.8_6                             0x00000ae0   Number         4  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    __arm_cp.8_7                             0x00000ae4   Number         4  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    [Anonymous Symbol]                       0x00000ae8   Section        0  sysctrl.o(.text.Sysctrl_GetPClkFreq)
    [Anonymous Symbol]                       0x00000afc   Section        0  sysctrl.o(.text.Sysctrl_SetPeripheralGate)
    __arm_cp.18_0                            0x00000b18   Number         4  sysctrl.o(.text.Sysctrl_SetPeripheralGate)
    [Anonymous Symbol]                       0x00000b1c   Section        0  sysctrl.o(.text.Sysctrl_SetXTHFreq)
    [Anonymous Symbol]                       0x00000b30   Section        0  sysctrl.o(.text.Sysctrl_SetXTHStableTime)
    [Anonymous Symbol]                       0x00000b44   Section        0  sysctrl.o(.text.Sysctrl_SysClkSwitch)
    __arm_cp.7_0                             0x00000b68   Number         4  sysctrl.o(.text.Sysctrl_SysClkSwitch)
    __arm_cp.7_1                             0x00000b6c   Number         4  sysctrl.o(.text.Sysctrl_SysClkSwitch)
    __arm_cp.7_2                             0x00000b70   Number         4  sysctrl.o(.text.Sysctrl_SysClkSwitch)
    [Anonymous Symbol]                       0x00000b74   Section        0  sysctrl.o(.text.Sysctrl_XTHDriverCfg)
    __arm_cp.1_0                             0x00000b88   Number         4  sysctrl.o(.text.Sysctrl_XTHDriverCfg)
    [Anonymous Symbol]                       0x00000b8c   Section        0  system_hc32f072.o(.text.SystemCoreClockUpdate)
    __arm_cp.0_0                             0x00000b98   Number         4  system_hc32f072.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00000b9c   Section        0  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_0                             0x00000bf0   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_1                             0x00000bf4   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_2                             0x00000bf8   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_3                             0x00000bfc   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_4                             0x00000c00   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_5                             0x00000c04   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_6                             0x00000c08   Number         4  system_hc32f072.o(.text.SystemInit)
    __arm_cp.1_7                             0x00000c0c   Number         4  system_hc32f072.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000c10   Section        0  interrupts_hc32f072.o(.text.TIM0_IRQHandler)
    [Anonymous Symbol]                       0x00000c18   Section        0  interrupts_hc32f072.o(.text.TIM1_IRQHandler)
    [Anonymous Symbol]                       0x00000c20   Section        0  interrupts_hc32f072.o(.text.TIM2_IRQHandler)
    [Anonymous Symbol]                       0x00000c28   Section        0  interrupts_hc32f072.o(.text.TIM3_IRQHandler)
    [Anonymous Symbol]                       0x00000c30   Section        0  interrupts_hc32f072.o(.text.TIM4_IRQHandler)
    [Anonymous Symbol]                       0x00000c38   Section        0  interrupts_hc32f072.o(.text.TIM5_IRQHandler)
    [Anonymous Symbol]                       0x00000c40   Section        0  interrupts_hc32f072.o(.text.TIM6_IRQHandler)
    [Anonymous Symbol]                       0x00000c48   Section        0  interrupts_hc32f072.o(.text.UART0_2_IRQHandler)
    [Anonymous Symbol]                       0x00000c54   Section        0  interrupts_hc32f072.o(.text.UART1_3_IRQHandler)
    [Anonymous Symbol]                       0x00000c60   Section        0  interrupts_hc32f072.o(.text.USBFS_IRQHandler)
    [Anonymous Symbol]                       0x00000c68   Section        0  main.o(.text.Uart0_IRQHandler)
    __arm_cp.1_0                             0x00000ce8   Number         4  main.o(.text.Uart0_IRQHandler)
    __arm_cp.1_1                             0x00000cec   Number         4  main.o(.text.Uart0_IRQHandler)
    [Anonymous Symbol]                       0x00000cf0   Section        0  uart.o(.text.Uart_ClrStatus)
    [Anonymous Symbol]                       0x00000d00   Section        0  uart.o(.text.Uart_DisableIrq)
    [Anonymous Symbol]                       0x00000d10   Section        0  uart.o(.text.Uart_EnableFunc)
    [Anonymous Symbol]                       0x00000d1e   Section        0  uart.o(.text.Uart_EnableIrq)
    [Anonymous Symbol]                       0x00000d2c   Section        0  uart.o(.text.Uart_GetStatus)
    [Anonymous Symbol]                       0x00000d38   Section        0  uart.o(.text.Uart_Init)
    [Anonymous Symbol]                       0x00000dac   Section        0  uart.o(.text.Uart_ReceiveData)
    [Anonymous Symbol]                       0x00000db2   Section        0  uart.o(.text.Uart_SendDataIt)
    [Anonymous Symbol]                       0x00000dc0   Section        0  interrupts_hc32f072.o(.text.VC0_1_2_LVD_IRQHandler)
    [Anonymous Symbol]                       0x00000dd4   Section        0  main.o(.text.W5500_Init)
    __arm_cp.3_0                             0x00000e00   Number         4  main.o(.text.W5500_Init)
    __arm_cp.3_1                             0x00000e04   Number         4  main.o(.text.W5500_Init)
    [Anonymous Symbol]                       0x00000e08   Section        0  interrupts_hc32f072.o(.text.WDT_IRQHandler)
    [Anonymous Symbol]                       0x00000e10   Section        0  w5500.o(.text.WIZCHIP_READ)
    [Anonymous Symbol]                       0x00000e48   Section        0  w5500.o(.text.WIZCHIP_READ_BUF)
    [Anonymous Symbol]                       0x00000e8c   Section        0  w5500.o(.text.WIZCHIP_WRITE)
    [Anonymous Symbol]                       0x00000ec8   Section        0  w5500.o(.text.WIZCHIP_WRITE_BUF)
    [Anonymous Symbol]                       0x00000f10   Section        0  wizchip_conf.o(.text.ctlwizchip)
    __arm_cp.12_0                            0x00001010   Number         4  wizchip_conf.o(.text.ctlwizchip)
    [Anonymous Symbol]                       0x00001014   Section        0  ddl.o(.text.ddl_memclr)
    [Anonymous Symbol]                       0x00001028   Section        0  ddl.o(.text.delay10us)
    __arm_cp.4_3                             0x00001068   Number         4  ddl.o(.text.delay10us)
    [Anonymous Symbol]                       0x0000106c   Section        0  ddl.o(.text.delay1ms)
    __arm_cp.2_0                             0x000010ac   Number         4  ddl.o(.text.delay1ms)
    __arm_cp.2_1                             0x000010b0   Number         4  ddl.o(.text.delay1ms)
    __arm_cp.2_2                             0x000010b4   Number         4  ddl.o(.text.delay1ms)
    [Anonymous Symbol]                       0x000010b8   Section        0  main.o(.text.main)
    __arm_cp.2_0                             0x00001334   Number         4  main.o(.text.main)
    __arm_cp.2_1                             0x00001338   Number         4  main.o(.text.main)
    __arm_cp.2_2                             0x0000133c   Number         4  main.o(.text.main)
    __arm_cp.2_3                             0x00001340   Number         4  main.o(.text.main)
    __arm_cp.2_4                             0x00001344   Number         4  main.o(.text.main)
    __arm_cp.2_5                             0x00001348   Number         4  main.o(.text.main)
    __arm_cp.2_6                             0x0000134c   Number         4  main.o(.text.main)
    __arm_cp.2_7                             0x00001350   Number         4  main.o(.text.main)
    __arm_cp.2_8                             0x00001354   Number         4  main.o(.text.main)
    __arm_cp.2_9                             0x00001358   Number         4  main.o(.text.main)
    __arm_cp.2_10                            0x0000135c   Number         4  main.o(.text.main)
    __arm_cp.2_11                            0x00001360   Number         4  main.o(.text.main)
    __arm_cp.2_12                            0x00001364   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x00001368   Section        0  wizchip_conf.o(.text.wizchip_bus_readbyte)
    [Anonymous Symbol]                       0x0000136c   Section        0  wizchip_conf.o(.text.wizchip_bus_writebyte)
    [Anonymous Symbol]                       0x00001370   Section        0  wizchip_conf.o(.text.wizchip_clrinterrupt)
    [Anonymous Symbol]                       0x0000138c   Section        0  wizchip_conf.o(.text.wizchip_cris_enter)
    [Anonymous Symbol]                       0x0000138e   Section        0  wizchip_conf.o(.text.wizchip_cris_exit)
    [Anonymous Symbol]                       0x00001390   Section        0  wizchip_conf.o(.text.wizchip_cs_deselect)
    [Anonymous Symbol]                       0x00001392   Section        0  wizchip_conf.o(.text.wizchip_cs_select)
    [Anonymous Symbol]                       0x00001394   Section        0  wizchip_conf.o(.text.wizchip_getinterrupt)
    [Anonymous Symbol]                       0x000013b0   Section        0  wizchip_conf.o(.text.wizchip_getinterruptmask)
    [Anonymous Symbol]                       0x000013cc   Section        0  wizchip_conf.o(.text.wizchip_init)
    __arm_cp.14_0                            0x00001444   Number         4  wizchip_conf.o(.text.wizchip_init)
    __arm_cp.14_1                            0x00001448   Number         4  wizchip_conf.o(.text.wizchip_init)
    [Anonymous Symbol]                       0x0000144c   Section        0  wizchip_conf.o(.text.wizchip_setinterruptmask)
    [Anonymous Symbol]                       0x00001468   Section        0  wizchip_conf.o(.text.wizchip_setnetinfo)
    __arm_cp.26_1                            0x000014b4   Number         4  wizchip_conf.o(.text.wizchip_setnetinfo)
    [Anonymous Symbol]                       0x000014b8   Section        0  wizchip_conf.o(.text.wizchip_sw_reset)
    __arm_cp.13_0                            0x00001530   Number         4  wizchip_conf.o(.text.wizchip_sw_reset)
    __arm_cp.13_1                            0x00001534   Number         4  wizchip_conf.o(.text.wizchip_sw_reset)
    [Anonymous Symbol]                       0x00001538   Section        0  wizchip_conf.o(.text.wizphy_getphyconf)
    __arm_cp.21_0                            0x00001594   Number         4  wizchip_conf.o(.text.wizphy_getphyconf)
    __arm_cp.21_1                            0x00001598   Number         4  wizchip_conf.o(.text.wizphy_getphyconf)
    [Anonymous Symbol]                       0x0000159c   Section        0  wizchip_conf.o(.text.wizphy_getphylink)
    [Anonymous Symbol]                       0x000015ac   Section        0  wizchip_conf.o(.text.wizphy_getphypmode)
    [Anonymous Symbol]                       0x000015c0   Section        0  wizchip_conf.o(.text.wizphy_reset)
    [Anonymous Symbol]                       0x000015e8   Section        0  wizchip_conf.o(.text.wizphy_setphyconf)
    [Anonymous Symbol]                       0x00001628   Section        0  wizchip_conf.o(.text.wizphy_setphypmode)
    i.__scatterload_copy                     0x00001676   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00001684   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001686   Section       14  handlers.o(i.__scatterload_zeroinit)
    [Anonymous Symbol]                       0x00001694   Section        0  main.o(.rodata..L__const.W5500_Init.netInfo)
    [Anonymous Symbol]                       0x20000000   Section        0  main.o(.data..L_MergedGlobals)
    _DNS_.0                                  0x20000040   Data           1  wizchip_conf.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000040   Section        0  wizchip_conf.o(.bss..L_MergedGlobals)
    _DNS_.1                                  0x20000041   Data           1  wizchip_conf.o(.bss..L_MergedGlobals)
    _DNS_.2                                  0x20000042   Data           1  wizchip_conf.o(.bss..L_MergedGlobals)
    _DNS_.3                                  0x20000043   Data           1  wizchip_conf.o(.bss..L_MergedGlobals)
    _DHCP_                                   0x20000044   Data           1  wizchip_conf.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000048   Section        0  main.o(.bss..L_MergedGlobals.1)
    STACK                                    0x20000068   Section      512  startup_hc32f072.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_hc32f072.o(RESET)
    Adc_IRQHandler                            - Undefined Weak Reference
    ClkTrim_IRQHandler                        - Undefined Weak Reference
    Cts_IRQHandler                            - Undefined Weak Reference
    Dac_IRQHandler                            - Undefined Weak Reference
    Dmac_IRQHandler                           - Undefined Weak Reference
    Flash_IRQHandler                          - Undefined Weak Reference
    I2c0_IRQHandler                           - Undefined Weak Reference
    I2c1_IRQHandler                           - Undefined Weak Reference
    I2s0_IRQHandler                           - Undefined Weak Reference
    I2s1_IRQHandler                           - Undefined Weak Reference
    LpUart0_IRQHandler                        - Undefined Weak Reference
    LpUart1_IRQHandler                        - Undefined Weak Reference
    Lvd_IRQHandler                            - Undefined Weak Reference
    Pca_IRQHandler                            - Undefined Weak Reference
    PortA_IRQHandler                          - Undefined Weak Reference
    PortB_IRQHandler                          - Undefined Weak Reference
    PortC_IRQHandler                          - Undefined Weak Reference
    PortD_IRQHandler                          - Undefined Weak Reference
    PortE_IRQHandler                          - Undefined Weak Reference
    PortF_IRQHandler                          - Undefined Weak Reference
    Ram_IRQHandler                            - Undefined Weak Reference
    Spi0_IRQHandler                           - Undefined Weak Reference
    Spi1_IRQHandler                           - Undefined Weak Reference
    SysTick_IRQHandler                        - Undefined Weak Reference
    Tim0_IRQHandler                           - Undefined Weak Reference
    Tim1_IRQHandler                           - Undefined Weak Reference
    Tim2_IRQHandler                           - Undefined Weak Reference
    Tim3_IRQHandler                           - Undefined Weak Reference
    Tim4_IRQHandler                           - Undefined Weak Reference
    Tim5_IRQHandler                           - Undefined Weak Reference
    Tim6_IRQHandler                           - Undefined Weak Reference
    Uart1_IRQHandler                          - Undefined Weak Reference
    Uart2_IRQHandler                          - Undefined Weak Reference
    Uart3_IRQHandler                          - Undefined Weak Reference
    Usbfs_IRQHandler                          - Undefined Weak Reference
    Vc0_IRQHandler                            - Undefined Weak Reference
    Vc1_IRQHandler                            - Undefined Weak Reference
    Vc2_IRQHandler                            - Undefined Weak Reference
    Wdt_IRQHandler                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_hc32f072.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_hc32f072.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code    26  startup_hc32f072.o(.text)
    NMI_Handler                              0x000000ef   Thumb Code     2  startup_hc32f072.o(.text)
    SVC_Handler                              0x000000f3   Thumb Code     2  startup_hc32f072.o(.text)
    PendSV_Handler                           0x000000f5   Thumb Code     2  startup_hc32f072.o(.text)
    Dummy_Handler                            0x000000f9   Thumb Code     0  startup_hc32f072.o(.text)
    __aeabi_memcpy                           0x00000111   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000111   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000111   Thumb Code     0  memcpya.o(.text)
    __aeabi_fadd                             0x00000135   Thumb Code   162  fadd.o(.text)
    __aeabi_fsub                             0x000001d7   Thumb Code     8  fadd.o(.text)
    __aeabi_frsub                            0x000001df   Thumb Code     8  fadd.o(.text)
    __aeabi_fdiv                             0x000001e7   Thumb Code   124  fdiv.o(.text)
    __aeabi_ui2f                             0x00000263   Thumb Code    14  ffltui.o(.text)
    __aeabi_f2iz                             0x00000271   Thumb Code    50  ffixi.o(.text)
    __aeabi_uidiv                            0x000002a3   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x000002a3   Thumb Code    62  uidiv_div0.o(.text)
    __I$use$fp                               0x000002e1   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x000002e1   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x000002f1   Thumb Code   114  fepilogue.o(.text)
    __scatterload                            0x00000365   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000365   Thumb Code     0  init.o(.text)
    main                                     0x00000389   Thumb Code    14  system_hc32f072.o(.text.$Sub$$main)
    ADC_DAC_IRQHandler                       0x00000397   Thumb Code    12  interrupts_hc32f072.o(.text.ADC_DAC_IRQHandler)
    App_PortInit                             0x000003a3   Thumb Code    78  main.o(.text.App_PortInit)
    App_UartCfg                              0x000003f1   Thumb Code   102  main.o(.text.App_UartCfg)
    CAN_FilterConfig                         0x00000459   Thumb Code   124  can.o(.text.CAN_FilterConfig)
    CAN_IRQHandler                           0x000004d5   Thumb Code     8  interrupts_hc32f072.o(.text.CAN_IRQHandler)
    CAN_Init                                 0x000004dd   Thumb Code   168  can.o(.text.CAN_Init)
    CAN_IrqCmd                               0x00000589   Thumb Code    20  can.o(.text.CAN_IrqCmd)
    CAN_IrqFlgClr                            0x0000059d   Thumb Code    16  can.o(.text.CAN_IrqFlgClr)
    CAN_IrqFlgGet                            0x000005b1   Thumb Code    12  can.o(.text.CAN_IrqFlgGet)
    CAN_Receive                              0x000005c1   Thumb Code    32  can.o(.text.CAN_Receive)
    CLKTRIM_CTS_IRQHandler                   0x000005e9   Thumb Code    12  interrupts_hc32f072.o(.text.CLKTRIM_CTS_IRQHandler)
    Can_IRQHandler                           0x000005f5   Thumb Code    44  main.o(.text.Can_IRQHandler)
    DMAC_IRQHandler                          0x00000625   Thumb Code     8  interrupts_hc32f072.o(.text.DMAC_IRQHandler)
    EnableNvic                               0x0000062d   Thumb Code   112  interrupts_hc32f072.o(.text.EnableNvic)
    FLASH_RAM_IRQHandler                     0x000006b1   Thumb Code    12  interrupts_hc32f072.o(.text.FLASH_RAM_IRQHandler)
    GetBit                                   0x000006bd   Thumb Code    10  ddl.o(.text.GetBit)
    Gpio_ClrIO                               0x000006c9   Thumb Code    16  gpio.o(.text.Gpio_ClrIO)
    Gpio_Init                                0x000006dd   Thumb Code   124  gpio.o(.text.Gpio_Init)
    Gpio_SetAfMode                           0x00000765   Thumb Code    12  gpio.o(.text.Gpio_SetAfMode)
    Gpio_WriteOutputIO                       0x00000775   Thumb Code    16  gpio.o(.text.Gpio_WriteOutputIO)
    HardFault_Handler                        0x00000789   Thumb Code    16  interrupts_hc32f072.o(.text.HardFault_Handler)
    I2C0_IRQHandler                          0x00000799   Thumb Code     8  interrupts_hc32f072.o(.text.I2C0_IRQHandler)
    I2C1_IRQHandler                          0x000007a1   Thumb Code     8  interrupts_hc32f072.o(.text.I2C1_IRQHandler)
    LPUART0_IRQHandler                       0x000007a9   Thumb Code     8  interrupts_hc32f072.o(.text.LPUART0_IRQHandler)
    LPUART1_IRQHandler                       0x000007b1   Thumb Code     8  interrupts_hc32f072.o(.text.LPUART1_IRQHandler)
    PCA_IRQHandler                           0x000007b9   Thumb Code     8  interrupts_hc32f072.o(.text.PCA_IRQHandler)
    PORTA_IRQHandler                         0x000007c1   Thumb Code     8  interrupts_hc32f072.o(.text.PORTA_IRQHandler)
    PORTB_IRQHandler                         0x000007c9   Thumb Code     8  interrupts_hc32f072.o(.text.PORTB_IRQHandler)
    PORTC_E_IRQHandler                       0x000007d1   Thumb Code    12  interrupts_hc32f072.o(.text.PORTC_E_IRQHandler)
    PORTD_F_IRQHandler                       0x000007dd   Thumb Code    12  interrupts_hc32f072.o(.text.PORTD_F_IRQHandler)
    Reset_RstPeripheral0                     0x000007e9   Thumb Code    16  reset.o(.text.Reset_RstPeripheral0)
    SPI0_I2S0_IRQHandler                     0x000007fd   Thumb Code    12  interrupts_hc32f072.o(.text.SPI0_I2S0_IRQHandler)
    SPI1_I2S1_IRQHandler                     0x00000809   Thumb Code    12  interrupts_hc32f072.o(.text.SPI1_I2S1_IRQHandler)
    SetBit                                   0x00000815   Thumb Code    22  ddl.o(.text.SetBit)
    Spi_Init                                 0x0000082b   Thumb Code    36  spi.o(.text.Spi_Init)
    Spi_ReceiveBuf                           0x0000084f   Thumb Code    42  spi.o(.text.Spi_ReceiveBuf)
    Spi_SendBuf                              0x00000879   Thumb Code    48  spi.o(.text.Spi_SendBuf)
    Spi_SetCS                                0x000008a9   Thumb Code     4  spi.o(.text.Spi_SetCS)
    SysTick_Handler                          0x000008ad   Thumb Code     8  interrupts_hc32f072.o(.text.SysTick_Handler)
    Sysctrl_ClkSourceEnable                  0x000008b5   Thumb Code   316  sysctrl.o(.text.Sysctrl_ClkSourceEnable)
    Sysctrl_GetHClkFreq                      0x000009fd   Thumb Code   212  sysctrl.o(.text.Sysctrl_GetHClkFreq)
    Sysctrl_GetPClkFreq                      0x00000ae9   Thumb Code    20  sysctrl.o(.text.Sysctrl_GetPClkFreq)
    Sysctrl_SetPeripheralGate                0x00000afd   Thumb Code    28  sysctrl.o(.text.Sysctrl_SetPeripheralGate)
    Sysctrl_SetXTHFreq                       0x00000b1d   Thumb Code    20  sysctrl.o(.text.Sysctrl_SetXTHFreq)
    Sysctrl_SetXTHStableTime                 0x00000b31   Thumb Code    20  sysctrl.o(.text.Sysctrl_SetXTHStableTime)
    Sysctrl_SysClkSwitch                     0x00000b45   Thumb Code    36  sysctrl.o(.text.Sysctrl_SysClkSwitch)
    Sysctrl_XTHDriverCfg                     0x00000b75   Thumb Code    20  sysctrl.o(.text.Sysctrl_XTHDriverCfg)
    SystemCoreClockUpdate                    0x00000b8d   Thumb Code    12  system_hc32f072.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00000b9d   Thumb Code    84  system_hc32f072.o(.text.SystemInit)
    TIM0_IRQHandler                          0x00000c11   Thumb Code     8  interrupts_hc32f072.o(.text.TIM0_IRQHandler)
    TIM1_IRQHandler                          0x00000c19   Thumb Code     8  interrupts_hc32f072.o(.text.TIM1_IRQHandler)
    TIM2_IRQHandler                          0x00000c21   Thumb Code     8  interrupts_hc32f072.o(.text.TIM2_IRQHandler)
    TIM3_IRQHandler                          0x00000c29   Thumb Code     8  interrupts_hc32f072.o(.text.TIM3_IRQHandler)
    TIM4_IRQHandler                          0x00000c31   Thumb Code     8  interrupts_hc32f072.o(.text.TIM4_IRQHandler)
    TIM5_IRQHandler                          0x00000c39   Thumb Code     8  interrupts_hc32f072.o(.text.TIM5_IRQHandler)
    TIM6_IRQHandler                          0x00000c41   Thumb Code     8  interrupts_hc32f072.o(.text.TIM6_IRQHandler)
    UART0_2_IRQHandler                       0x00000c49   Thumb Code    12  interrupts_hc32f072.o(.text.UART0_2_IRQHandler)
    UART1_3_IRQHandler                       0x00000c55   Thumb Code    12  interrupts_hc32f072.o(.text.UART1_3_IRQHandler)
    USBFS_IRQHandler                         0x00000c61   Thumb Code     8  interrupts_hc32f072.o(.text.USBFS_IRQHandler)
    Uart0_IRQHandler                         0x00000c69   Thumb Code   128  main.o(.text.Uart0_IRQHandler)
    Uart_ClrStatus                           0x00000cf1   Thumb Code    16  uart.o(.text.Uart_ClrStatus)
    Uart_DisableIrq                          0x00000d01   Thumb Code    16  uart.o(.text.Uart_DisableIrq)
    Uart_EnableFunc                          0x00000d11   Thumb Code    14  uart.o(.text.Uart_EnableFunc)
    Uart_EnableIrq                           0x00000d1f   Thumb Code    14  uart.o(.text.Uart_EnableIrq)
    Uart_GetStatus                           0x00000d2d   Thumb Code    10  uart.o(.text.Uart_GetStatus)
    Uart_Init                                0x00000d39   Thumb Code   108  uart.o(.text.Uart_Init)
    Uart_ReceiveData                         0x00000dad   Thumb Code     6  uart.o(.text.Uart_ReceiveData)
    Uart_SendDataIt                          0x00000db3   Thumb Code    14  uart.o(.text.Uart_SendDataIt)
    VC0_1_2_LVD_IRQHandler                   0x00000dc1   Thumb Code    20  interrupts_hc32f072.o(.text.VC0_1_2_LVD_IRQHandler)
    W5500_Init                               0x00000dd5   Thumb Code    44  main.o(.text.W5500_Init)
    WDT_IRQHandler                           0x00000e09   Thumb Code     8  interrupts_hc32f072.o(.text.WDT_IRQHandler)
    WIZCHIP_READ                             0x00000e11   Thumb Code    56  w5500.o(.text.WIZCHIP_READ)
    WIZCHIP_READ_BUF                         0x00000e49   Thumb Code    68  w5500.o(.text.WIZCHIP_READ_BUF)
    WIZCHIP_WRITE                            0x00000e8d   Thumb Code    60  w5500.o(.text.WIZCHIP_WRITE)
    WIZCHIP_WRITE_BUF                        0x00000ec9   Thumb Code    72  w5500.o(.text.WIZCHIP_WRITE_BUF)
    ctlwizchip                               0x00000f11   Thumb Code   256  wizchip_conf.o(.text.ctlwizchip)
    ddl_memclr                               0x00001015   Thumb Code    20  ddl.o(.text.ddl_memclr)
    delay10us                                0x00001029   Thumb Code    64  ddl.o(.text.delay10us)
    delay1ms                                 0x0000106d   Thumb Code    64  ddl.o(.text.delay1ms)
    $Super$$main                             0x000010b9   Thumb Code   636  main.o(.text.main)
    wizchip_bus_readbyte                     0x00001369   Thumb Code     4  wizchip_conf.o(.text.wizchip_bus_readbyte)
    wizchip_bus_writebyte                    0x0000136d   Thumb Code     4  wizchip_conf.o(.text.wizchip_bus_writebyte)
    wizchip_clrinterrupt                     0x00001371   Thumb Code    28  wizchip_conf.o(.text.wizchip_clrinterrupt)
    wizchip_cris_enter                       0x0000138d   Thumb Code     2  wizchip_conf.o(.text.wizchip_cris_enter)
    wizchip_cris_exit                        0x0000138f   Thumb Code     2  wizchip_conf.o(.text.wizchip_cris_exit)
    wizchip_cs_deselect                      0x00001391   Thumb Code     2  wizchip_conf.o(.text.wizchip_cs_deselect)
    wizchip_cs_select                        0x00001393   Thumb Code     2  wizchip_conf.o(.text.wizchip_cs_select)
    wizchip_getinterrupt                     0x00001395   Thumb Code    28  wizchip_conf.o(.text.wizchip_getinterrupt)
    wizchip_getinterruptmask                 0x000013b1   Thumb Code    26  wizchip_conf.o(.text.wizchip_getinterruptmask)
    wizchip_init                             0x000013cd   Thumb Code   120  wizchip_conf.o(.text.wizchip_init)
    wizchip_setinterruptmask                 0x0000144d   Thumb Code    26  wizchip_conf.o(.text.wizchip_setinterruptmask)
    wizchip_setnetinfo                       0x00001469   Thumb Code    76  wizchip_conf.o(.text.wizchip_setnetinfo)
    wizchip_sw_reset                         0x000014b9   Thumb Code   120  wizchip_conf.o(.text.wizchip_sw_reset)
    wizphy_getphyconf                        0x00001539   Thumb Code    92  wizchip_conf.o(.text.wizphy_getphyconf)
    wizphy_getphylink                        0x0000159d   Thumb Code    16  wizchip_conf.o(.text.wizphy_getphylink)
    wizphy_getphypmode                       0x000015ad   Thumb Code    20  wizchip_conf.o(.text.wizphy_getphypmode)
    wizphy_reset                             0x000015c1   Thumb Code    40  wizchip_conf.o(.text.wizphy_reset)
    wizphy_setphyconf                        0x000015e9   Thumb Code    64  wizchip_conf.o(.text.wizphy_setphyconf)
    wizphy_setphypmode                       0x00001629   Thumb Code    78  wizchip_conf.o(.text.wizphy_setphypmode)
    __scatterload_copy                       0x00001677   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00001685   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001687   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x000016ac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000016cc   Number         0  anon$$obj.o(Region$$Table)
    txsize                                   0x20000000   Data           8  main.o(.data..L_MergedGlobals)
    rxsize                                   0x20000008   Data           8  main.o(.data..L_MergedGlobals)
    SystemCoreClock                          0x20000010   Data           4  system_hc32f072.o(.data.SystemCoreClock)
    WIZCHIP                                  0x20000014   Data          32  wizchip_conf.o(.data.WIZCHIP)
    tx_buf                                   0x20000034   Data           8  main.o(.data.tx_buf)
    u8TxData                                 0x2000003c   Data           2  main.o(.data.u8TxData)
    u8RxFlag                                 0x20000048   Data           1  main.o(.bss..L_MergedGlobals.1)
    u8TxCnt                                  0x20000049   Data           1  main.o(.bss..L_MergedGlobals.1)
    u8RxCnt                                  0x2000004a   Data           1  main.o(.bss..L_MergedGlobals.1)
    u8RxData                                 0x2000004b   Data           2  main.o(.bss..L_MergedGlobals.1)
    stcRxFrame                               0x20000050   Data          16  main.o(.bss..L_MergedGlobals.1)
    rx_buf                                   0x20000060   Data           8  main.o(.bss.rx_buf)
    __initial_sp                             0x20000268   Data           0  startup_hc32f072.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001710, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000016cc, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO           88    RESET               startup_hc32f072.o
    0x000000c0   0x000000c0   0x00000000   Code   RO          543  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO          562    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO          565    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          567    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          569    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO          570    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO          572    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO          574    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO          563    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x0000003c   Code   RO           89    .text               startup_hc32f072.o
    0x00000110   0x00000110   0x00000024   Code   RO          550    .text               mc_p.l(memcpya.o)
    0x00000134   0x00000134   0x000000b2   Code   RO          554    .text               mf_p.l(fadd.o)
    0x000001e6   0x000001e6   0x0000007c   Code   RO          556    .text               mf_p.l(fdiv.o)
    0x00000262   0x00000262   0x0000000e   Code   RO          558    .text               mf_p.l(ffltui.o)
    0x00000270   0x00000270   0x00000032   Code   RO          560    .text               mf_p.l(ffixi.o)
    0x000002a2   0x000002a2   0x0000003e   Code   RO          578    .text               mc_p.l(uidiv_div0.o)
    0x000002e0   0x000002e0   0x00000000   Code   RO          584    .text               mc_p.l(iusefp.o)
    0x000002e0   0x000002e0   0x00000082   Code   RO          585    .text               mf_p.l(fepilogue.o)
    0x00000362   0x00000362   0x00000002   PAD
    0x00000364   0x00000364   0x00000024   Code   RO          587    .text               mc_p.l(init.o)
    0x00000388   0x00000388   0x0000000e   Code   RO            6    .text.$Sub$$main    system_hc32f072.o
    0x00000396   0x00000396   0x0000000c   Code   RO           67    .text.ADC_DAC_IRQHandler  interrupts_hc32f072.o
    0x000003a2   0x000003a2   0x0000004e   Code   RO          520    .text.App_PortInit  main.o
    0x000003f0   0x000003f0   0x00000066   Code   RO          522    .text.App_UartCfg   main.o
    0x00000456   0x00000456   0x00000002   PAD
    0x00000458   0x00000458   0x0000007c   Code   RO          178    .text.CAN_FilterConfig  can.o
    0x000004d4   0x000004d4   0x00000008   Code   RO           73    .text.CAN_IRQHandler  interrupts_hc32f072.o
    0x000004dc   0x000004dc   0x000000ac   Code   RO          172    .text.CAN_Init      can.o
    0x00000588   0x00000588   0x00000014   Code   RO          194    .text.CAN_IrqCmd    can.o
    0x0000059c   0x0000059c   0x00000014   Code   RO          198    .text.CAN_IrqFlgClr  can.o
    0x000005b0   0x000005b0   0x00000010   Code   RO          196    .text.CAN_IrqFlgGet  can.o
    0x000005c0   0x000005c0   0x00000028   Code   RO          186    .text.CAN_Receive   can.o
    0x000005e8   0x000005e8   0x0000000c   Code   RO           77    .text.CLKTRIM_CTS_IRQHandler  interrupts_hc32f072.o
    0x000005f4   0x000005f4   0x00000030   Code   RO          512    .text.Can_IRQHandler  main.o
    0x00000624   0x00000624   0x00000008   Code   RO           31    .text.DMAC_IRQHandler  interrupts_hc32f072.o
    0x0000062c   0x0000062c   0x00000084   Code   RO           17    .text.EnableNvic    interrupts_hc32f072.o
    0x000006b0   0x000006b0   0x0000000c   Code   RO           75    .text.FLASH_RAM_IRQHandler  interrupts_hc32f072.o
    0x000006bc   0x000006bc   0x0000000a   Code   RO          108    .text.GetBit        ddl.o
    0x000006c6   0x000006c6   0x00000002   PAD
    0x000006c8   0x000006c8   0x00000014   Code   RO          230    .text.Gpio_ClrIO    gpio.o
    0x000006dc   0x000006dc   0x00000088   Code   RO          214    .text.Gpio_Init     gpio.o
    0x00000764   0x00000764   0x00000010   Code   RO          236    .text.Gpio_SetAfMode  gpio.o
    0x00000774   0x00000774   0x00000014   Code   RO          220    .text.Gpio_WriteOutputIO  gpio.o
    0x00000788   0x00000788   0x00000010   Code   RO           19    .text.HardFault_Handler  interrupts_hc32f072.o
    0x00000798   0x00000798   0x00000008   Code   RO           47    .text.I2C0_IRQHandler  interrupts_hc32f072.o
    0x000007a0   0x000007a0   0x00000008   Code   RO           49    .text.I2C1_IRQHandler  interrupts_hc32f072.o
    0x000007a8   0x000007a8   0x00000008   Code   RO           39    .text.LPUART0_IRQHandler  interrupts_hc32f072.o
    0x000007b0   0x000007b0   0x00000008   Code   RO           41    .text.LPUART1_IRQHandler  interrupts_hc32f072.o
    0x000007b8   0x000007b8   0x00000008   Code   RO           63    .text.PCA_IRQHandler  interrupts_hc32f072.o
    0x000007c0   0x000007c0   0x00000008   Code   RO           23    .text.PORTA_IRQHandler  interrupts_hc32f072.o
    0x000007c8   0x000007c8   0x00000008   Code   RO           25    .text.PORTB_IRQHandler  interrupts_hc32f072.o
    0x000007d0   0x000007d0   0x0000000c   Code   RO           27    .text.PORTC_E_IRQHandler  interrupts_hc32f072.o
    0x000007dc   0x000007dc   0x0000000c   Code   RO           29    .text.PORTD_F_IRQHandler  interrupts_hc32f072.o
    0x000007e8   0x000007e8   0x00000014   Code   RO          318    .text.Reset_RstPeripheral0  reset.o
    0x000007fc   0x000007fc   0x0000000c   Code   RO           43    .text.SPI0_I2S0_IRQHandler  interrupts_hc32f072.o
    0x00000808   0x00000808   0x0000000c   Code   RO           45    .text.SPI1_I2S1_IRQHandler  interrupts_hc32f072.o
    0x00000814   0x00000814   0x00000016   Code   RO          106    .text.SetBit        ddl.o
    0x0000082a   0x0000082a   0x00000024   Code   RO          286    .text.Spi_Init      spi.o
    0x0000084e   0x0000084e   0x0000002a   Code   RO          300    .text.Spi_ReceiveBuf  spi.o
    0x00000878   0x00000878   0x00000030   Code   RO          296    .text.Spi_SendBuf   spi.o
    0x000008a8   0x000008a8   0x00000004   Code   RO          288    .text.Spi_SetCS     spi.o
    0x000008ac   0x000008ac   0x00000008   Code   RO           21    .text.SysTick_Handler  interrupts_hc32f072.o
    0x000008b4   0x000008b4   0x00000148   Code   RO          118    .text.Sysctrl_ClkSourceEnable  sysctrl.o
    0x000009fc   0x000009fc   0x000000ec   Code   RO          134    .text.Sysctrl_GetHClkFreq  sysctrl.o
    0x00000ae8   0x00000ae8   0x00000014   Code   RO          136    .text.Sysctrl_GetPClkFreq  sysctrl.o
    0x00000afc   0x00000afc   0x00000020   Code   RO          154    .text.Sysctrl_SetPeripheralGate  sysctrl.o
    0x00000b1c   0x00000b1c   0x00000014   Code   RO          148    .text.Sysctrl_SetXTHFreq  sysctrl.o
    0x00000b30   0x00000b30   0x00000014   Code   RO          124    .text.Sysctrl_SetXTHStableTime  sysctrl.o
    0x00000b44   0x00000b44   0x00000030   Code   RO          132    .text.Sysctrl_SysClkSwitch  sysctrl.o
    0x00000b74   0x00000b74   0x00000018   Code   RO          120    .text.Sysctrl_XTHDriverCfg  sysctrl.o
    0x00000b8c   0x00000b8c   0x00000010   Code   RO            2    .text.SystemCoreClockUpdate  system_hc32f072.o
    0x00000b9c   0x00000b9c   0x00000074   Code   RO            4    .text.SystemInit    system_hc32f072.o
    0x00000c10   0x00000c10   0x00000008   Code   RO           51    .text.TIM0_IRQHandler  interrupts_hc32f072.o
    0x00000c18   0x00000c18   0x00000008   Code   RO           53    .text.TIM1_IRQHandler  interrupts_hc32f072.o
    0x00000c20   0x00000c20   0x00000008   Code   RO           55    .text.TIM2_IRQHandler  interrupts_hc32f072.o
    0x00000c28   0x00000c28   0x00000008   Code   RO           33    .text.TIM3_IRQHandler  interrupts_hc32f072.o
    0x00000c30   0x00000c30   0x00000008   Code   RO           57    .text.TIM4_IRQHandler  interrupts_hc32f072.o
    0x00000c38   0x00000c38   0x00000008   Code   RO           59    .text.TIM5_IRQHandler  interrupts_hc32f072.o
    0x00000c40   0x00000c40   0x00000008   Code   RO           61    .text.TIM6_IRQHandler  interrupts_hc32f072.o
    0x00000c48   0x00000c48   0x0000000c   Code   RO           35    .text.UART0_2_IRQHandler  interrupts_hc32f072.o
    0x00000c54   0x00000c54   0x0000000c   Code   RO           37    .text.UART1_3_IRQHandler  interrupts_hc32f072.o
    0x00000c60   0x00000c60   0x00000008   Code   RO           71    .text.USBFS_IRQHandler  interrupts_hc32f072.o
    0x00000c68   0x00000c68   0x00000088   Code   RO          514    .text.Uart0_IRQHandler  main.o
    0x00000cf0   0x00000cf0   0x00000010   Code   RO          492    .text.Uart_ClrStatus  uart.o
    0x00000d00   0x00000d00   0x00000010   Code   RO          468    .text.Uart_DisableIrq  uart.o
    0x00000d10   0x00000d10   0x0000000e   Code   RO          482    .text.Uart_EnableFunc  uart.o
    0x00000d1e   0x00000d1e   0x0000000e   Code   RO          466    .text.Uart_EnableIrq  uart.o
    0x00000d2c   0x00000d2c   0x0000000a   Code   RO          488    .text.Uart_GetStatus  uart.o
    0x00000d36   0x00000d36   0x00000002   PAD
    0x00000d38   0x00000d38   0x00000074   Code   RO          502    .text.Uart_Init     uart.o
    0x00000dac   0x00000dac   0x00000006   Code   RO          500    .text.Uart_ReceiveData  uart.o
    0x00000db2   0x00000db2   0x0000000e   Code   RO          498    .text.Uart_SendDataIt  uart.o
    0x00000dc0   0x00000dc0   0x00000014   Code   RO           69    .text.VC0_1_2_LVD_IRQHandler  interrupts_hc32f072.o
    0x00000dd4   0x00000dd4   0x00000034   Code   RO          518    .text.W5500_Init    main.o
    0x00000e08   0x00000e08   0x00000008   Code   RO           65    .text.WDT_IRQHandler  interrupts_hc32f072.o
    0x00000e10   0x00000e10   0x00000038   Code   RO          440    .text.WIZCHIP_READ  w5500.o
    0x00000e48   0x00000e48   0x00000044   Code   RO          444    .text.WIZCHIP_READ_BUF  w5500.o
    0x00000e8c   0x00000e8c   0x0000003c   Code   RO          442    .text.WIZCHIP_WRITE  w5500.o
    0x00000ec8   0x00000ec8   0x00000048   Code   RO          446    .text.WIZCHIP_WRITE_BUF  w5500.o
    0x00000f10   0x00000f10   0x00000104   Code   RO          354    .text.ctlwizchip    wizchip_conf.o
    0x00001014   0x00001014   0x00000014   Code   RO           98    .text.ddl_memclr    ddl.o
    0x00001028   0x00001028   0x00000044   Code   RO          104    .text.delay10us     ddl.o
    0x0000106c   0x0000106c   0x0000004c   Code   RO          100    .text.delay1ms      ddl.o
    0x000010b8   0x000010b8   0x000002b0   Code   RO          516    .text.main          main.o
    0x00001368   0x00001368   0x00000004   Code   RO          338    .text.wizchip_bus_readbyte  wizchip_conf.o
    0x0000136c   0x0000136c   0x00000004   Code   RO          340    .text.wizchip_bus_writebyte  wizchip_conf.o
    0x00001370   0x00001370   0x0000001c   Code   RO          360    .text.wizchip_clrinterrupt  wizchip_conf.o
    0x0000138c   0x0000138c   0x00000002   Code   RO          330    .text.wizchip_cris_enter  wizchip_conf.o
    0x0000138e   0x0000138e   0x00000002   Code   RO          332    .text.wizchip_cris_exit  wizchip_conf.o
    0x00001390   0x00001390   0x00000002   Code   RO          336    .text.wizchip_cs_deselect  wizchip_conf.o
    0x00001392   0x00001392   0x00000002   Code   RO          334    .text.wizchip_cs_select  wizchip_conf.o
    0x00001394   0x00001394   0x0000001c   Code   RO          362    .text.wizchip_getinterrupt  wizchip_conf.o
    0x000013b0   0x000013b0   0x0000001a   Code   RO          366    .text.wizchip_getinterruptmask  wizchip_conf.o
    0x000013ca   0x000013ca   0x00000002   PAD
    0x000013cc   0x000013cc   0x00000080   Code   RO          358    .text.wizchip_init  wizchip_conf.o
    0x0000144c   0x0000144c   0x0000001a   Code   RO          364    .text.wizchip_setinterruptmask  wizchip_conf.o
    0x00001466   0x00001466   0x00000002   PAD
    0x00001468   0x00001468   0x00000050   Code   RO          382    .text.wizchip_setnetinfo  wizchip_conf.o
    0x000014b8   0x000014b8   0x00000080   Code   RO          356    .text.wizchip_sw_reset  wizchip_conf.o
    0x00001538   0x00001538   0x00000064   Code   RO          372    .text.wizphy_getphyconf  wizchip_conf.o
    0x0000159c   0x0000159c   0x00000010   Code   RO          378    .text.wizphy_getphylink  wizchip_conf.o
    0x000015ac   0x000015ac   0x00000014   Code   RO          376    .text.wizphy_getphypmode  wizchip_conf.o
    0x000015c0   0x000015c0   0x00000028   Code   RO          368    .text.wizphy_reset  wizchip_conf.o
    0x000015e8   0x000015e8   0x00000040   Code   RO          370    .text.wizphy_setphyconf  wizchip_conf.o
    0x00001628   0x00001628   0x0000004e   Code   RO          374    .text.wizphy_setphypmode  wizchip_conf.o
    0x00001676   0x00001676   0x0000000e   Code   RO          591    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00001684   0x00001684   0x00000002   Code   RO          592    i.__scatterload_null  mc_p.l(handlers.o)
    0x00001686   0x00001686   0x0000000e   Code   RO          593    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00001694   0x00001694   0x00000017   Data   RO          531    .rodata..L__const.W5500_Init.netInfo  main.o
    0x000016ab   0x000016ab   0x00000001   PAD
    0x000016ac   0x000016ac   0x00000020   Data   RO          590    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x000016d0, Size: 0x00000268, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000016d0   0x00000010   Data   RW          534    .data..L_MergedGlobals  main.o
    0x20000010   0x000016e0   0x00000004   Data   RW            8    .data.SystemCoreClock  system_hc32f072.o
    0x20000014   0x000016e4   0x00000020   Data   RW          396    .data.WIZCHIP       wizchip_conf.o
    0x20000034   0x00001704   0x00000008   Data   RW          529    .data.tx_buf        main.o
    0x2000003c   0x0000170c   0x00000002   Data   RW          530    .data.u8TxData      main.o
    0x2000003e   0x0000170e   0x00000002   PAD
    0x20000040        -       0x00000005   Zero   RW          397    .bss..L_MergedGlobals  wizchip_conf.o
    0x20000045   0x0000170e   0x00000003   PAD
    0x20000048        -       0x00000018   Zero   RW          535    .bss..L_MergedGlobals.1  main.o
    0x20000060        -       0x00000008   Zero   RW          528    .bss.rx_buf         main.o
    0x20000068        -       0x00000200   Zero   RW           86    STACK               startup_hc32f072.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       392         20          0          0          0      11870   can.o
       196         16          0          0          0       2543   ddl.o
       192         24          0          0          0      64386   gpio.o
       428         20          0          0          0       5880   interrupts_hc32f072.o
      1104         72         23         26         32      15870   main.o
        20          4          0          0          0       4073   reset.o
       130          0          0          0          0       5955   spi.o
        60         22        192          0        512        624   startup_hc32f072.o
       728         82          0          0          0      70450   sysctrl.o
       146         36          0          4          0      58517   system_hc32f072.o
       206          8          0          0          0       9035   uart.o
       256          0          0          0          0       3956   w5500.o
      1038         96          0         32          5      10328   wizchip_conf.o

    ----------------------------------------------------------------------
      4906        400        248         64        552     263487   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          1          2          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        36          0          0          0          0         60   memcpya.o
        62          0          0          0          0         72   uidiv_div0.o
       178          0          0          0          0        108   fadd.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        50          0          0          0          0         60   ffixi.o
        14          0          0          0          0         68   ffltui.o

    ----------------------------------------------------------------------
       682         16          0          0          0        652   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       184         16          0          0          0        200   mc_p.l
       496          0          0          0          0        452   mf_p.l

    ----------------------------------------------------------------------
       682         16          0          0          0        652   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      5588        416        248         64        552     263851   Grand Totals
      5588        416        248         64        552     263851   ELF Image Totals
      5588        416        248         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 5836 (   5.70kB)
    Total RW  Size (RW Data + ZI Data)               616 (   0.60kB)
    Total ROM Size (Code + RO Data + RW Data)       5900 (   5.76kB)

==============================================================================

